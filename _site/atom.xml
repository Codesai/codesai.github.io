<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codesai</title>
    <description>Posts</description>
    <link>https://codesai.aerobatic.io</link>
    
      
        <item>
          <title>Así viví Codemotion 2016</title>
          <description>&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/11/IMG_0377.jpg&quot;&gt;&lt;img src=&quot;/assets/IMG_0377.jpg&quot; alt=&quot;img_0377&quot; class=&quot;alignleft size-full wp-image-3186&quot; /&gt;&lt;/a&gt; Para mí el primer Codemotion y ha sido impactante, un eventazo de lo mejor. No me explico cómo es que no había estado antes.&lt;br /&gt;
Me lo he pasado bomba, he aprendido mucho, me he encontrado con muchísimos amigos, desvirtualizado a mucha gente y me he sentido en un ambiente acogedor y colaborativo, cosa que no es fácil teniendo en cuenta que hemos estado ¿2600 personas? Cuando estuve en la inspiradora ponencia de Jorge Barroso en el Track1, puede contar sentadas unas 400 personas y habíamos decenas de personas de pie. Por cierto que siempre que veo a Jorge aprendo, tanto de valores y cultura como de exponer en público. Me llevo muchas cosas para la saca. Recomiendo verla tranquilamente en casa.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;La organización ha hecho un trabajo brillante y los voluntarios han sido encantadores, muy atentos en todo momento. &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hace poquito escribía un post sobre las conferencias y la comida. Curiosamente en Codemotion el tema de la comida se resolvió justo como más me gusta. Había opción vegetariana, vegana y sin gluten y&lt;br /&gt;
todo estaba en el mismo sitio, con lo cual comer no era un problema. El segundo día llegué tarde y se había agotado lo vegano. Es una buena señal, un dato que puede usarse para que en futuras ediciones vaya aumentando el número de unidades veganas ya que gente no vegana también lo quería comer. Estaba muy rico. Eché de menos que la cafetería no estuviese abierta el sábado. El viernes tuve muy buenas conversaciones en la cafetería, donde además el café y las tostadas eran cojonudas. Poder comer al aire libre fué un plus los dos días.&lt;br /&gt;
La cena de ponentes del jueves fue en un lugar ideal para el networking y pasamos unas horas estupendas. Pena que lo único vegano que hubo fue la fruta del postre pero tampoco iba hambriento. Todo un detallazo lo de montar evento de networking para ponentes para ir calentando.&lt;br /&gt;
Las salas eran ideales para este formato de conferencias y las indicaciones para llegar a las mismas también.&lt;br /&gt;
Me ha parecido que el comportamiento de la gente ha sido muy cívico.&lt;br /&gt;
Ir el viernes en bus desde Plaza España funcionó estupendamente y para volver ese día también muy bien.&lt;br /&gt;
El sabado eché de menos no haberme organizado para compartir taxi al aeropuerto porque había mucha gente en al misma situación y al final se pidieron taxis de más y acabé yendo solo.&lt;br /&gt;
El viernes el registro fue rapidísimo. La conexión a internet me funcionó mucho mejor de lo que esperaba habiendo tantísimos dispositivos conectados.&lt;br /&gt;
Todas las sesiones a las que fuí me aportaron valor, la gente se había preparado muy bien el material de ponencias y talleres. Como siempre no se puede ir a todo pero tener muchas grabadas resuelve parte del problema. Estoy deseando verlas en casa. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/11/IMG_0357.jpg&quot;&gt;&lt;img src=&quot;/assets/IMG_0357.jpg&quot; alt=&quot;img_0357&quot; class=&quot;alignleft size-full wp-image-3187&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;He sido ponente, creo que un poco de rebote porque inicialmente no entró en la agenda mi propuesta pero unas semanas antes del evento me avisaron de que había un hueco y entraba. Quiero dar las gracias a la comunidad ágil por votar la sesión y a la organización por la oportunidad.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/11/IMG_0358.jpg&quot;&gt;&lt;img src=&quot;/assets/IMG_0358.jpg&quot; alt=&quot;img_0358&quot; class=&quot;alignleft size-full wp-image-3188&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Muchas gracias a los asistentes. La había trabajado mucho las semanas anteriores, la había rodado el día anterior en IronHack y tuve suerte de estar fresco ese día y contar las cosas tal como me has había preparado. Así que muy contento.&lt;/p&gt;
&lt;p&gt;Me dirigí a la sala casi 15 minutos antes de empezar porque no sabía ni donde estaba ubicada. Al bajar a la planta, enseguida me encontré una cola de gente enorme en el pasillo. Un pasillo muy largo que debe tener más de 50 metros. No sabía de qué era pero conforme caminaba buscando la sala me daba cuenta que era para ir a esta sesión. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/11/IMG_0359-1.jpg&quot;&gt;&lt;img src=&quot;/assets/IMG_0359-1.jpg&quot; alt=&quot;img_0359&quot; class=&quot;alignleft size-full wp-image-3190&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;La cola era impresionante, nunca había visto una cosa así. Estuvo a reventar y se quedó gente fuera.&lt;br /&gt;
Aquí se ven fotos que hice unos minutos antes de la charla, donde ahora que las veo me doy cuenta que hay como 5 personas saludando a la cámara, haciendo gesto de apoyo. Cuando las hacía no me dí cuenta. Daba gusto ver tantas caras conocidas entre los asistentes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/11/IMG_0360.jpg&quot;&gt;&lt;img src=&quot;/assets/IMG_0360.jpg&quot; alt=&quot;img_0360&quot; class=&quot;alignleft size-full wp-image-3191&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Puesto para mí la parte de interacción con los asistentes es de las más enriquecedoras, he aprendido que para otra ocasión es mejor decirselo así a la gente antes de cerrar la charla, para que no salgan corriendo despues de mi última slide, ya que había reservado tiempo extra precisamente para tener tiempo para preguntas y respuestas tranquilamente. Pedí a la gente que por favor no hicieran ruido al salir y pudimos tener esa sesión de preguntas que me permitió contar más cosas que tenía preparadas. En la ronda de preguntas es donde sale a relucir parte del material que genero preparando la charla, pero que descarto de las slides para asegurarme que hay interacción y así va con más contexto.&lt;br /&gt;
Gracias a todos los que expresaron feedback e incluso fotos y palabras de apoyo en twitter y en la agenda del evento:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/xurxodev/status/799643755628392448&quot; target=&quot;_blank&quot;&gt;https://twitter.com/xurxodev/status/799643755628392448&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/LaVandergil/status/799636774339284992&quot; target=&quot;_blank&quot;&gt;https://twitter.com/LaVandergil/status/799636774339284992&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/salvadelapuente/status/799632904443658240&quot; target=&quot;_blank&quot;&gt;https://twitter.com/salvadelapuente/status/799632904443658240&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/fiunchinho/status/799630942201581571&quot; target=&quot;_blank&quot;&gt;https://twitter.com/fiunchinho/status/799630942201581571&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/ialbeniz/status/799643042248622080&quot; target=&quot;_blank&quot;&gt;https://twitter.com/ialbeniz/status/799643042248622080&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/jllado/status/799643862566404096&quot; target=&quot;_blank&quot;&gt;https://twitter.com/jllado/status/799643862566404096&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/rbn_sans/status/799645458369015808&quot; target=&quot;_blank&quot;&gt;https://twitter.com/rbn_sans/status/799645458369015808&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/bberrycarmen/status/799642939345408000&quot; target=&quot;_blank&quot;&gt;https://twitter.com/bberrycarmen/status/799642939345408000&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/s_barri/status/799640722919985152&quot; target=&quot;_blank&quot;&gt;https://twitter.com/s_barri/status/799640722919985152&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/salvadelapuente/status/799640279779155969&quot; target=&quot;_blank&quot;&gt;https://twitter.com/salvadelapuente/status/799640279779155969&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/karolrodtor/status/799636550866898944&quot; target=&quot;_blank&quot;&gt;https://twitter.com/karolrodtor/status/799636550866898944&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2016.codemotion.es/agenda.html#5732408326356992/86444010&quot; target=&quot;_blank&quot;&gt;https://2016.codemotion.es/agenda.html#5732408326356992/86444010&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;La charla también la voy a hacer en CAS2016 en Vitoria-Gasteiz pero desconozco si allí se grabará.&lt;/p&gt;
&lt;p&gt;Uno de los puntos fuertes de los eventos es encontrarnos los compañeros de la comunidad Codesai. La comunidad es el equipo de Codesai más los amigos cercanos como Modesto y Laura. Modesto sigue estando en el canal de slack donde compartimos conocimiento y experiencias. Un lujo poder estar un rato con Alfredo, Antonio, Laura y Modesto. La ponencia de Alfredo y Laura me ha encantado, recomiendo estudiarla en casa con tranquilidad porque está repleta de experiencia destilada en materia de tests automáticos. Enhorabuena!  &lt;/p&gt;
&lt;p&gt;En cuanto a conocimiento técnico me encantado de haber comprendido lo que es una mónada gracias a la ponencia de Juan Manuel Serrano (muy buena para verla en vídeo). Así con un buen ejemplo da gusto. Además la puesta en escena fue muy amena.&lt;br /&gt;
Conocí Perceval de la mano de Alvaro del Castillo, herramienta muy interesante para proyectos que tenemos en mente. Nos confirmó que Kibana es una excelente herramienta.&lt;br /&gt;
Por otro lado en el taller de Polymer de Jorge del Casar descubrí muchas cosas que no conocía, me quedé con ganas de más.&lt;br /&gt;
La charla de Micael Gallego ha reforzado lo que ya Modesto venía sugiriendo de usar TypeScript y ha llegado el momento de probarlo. Usar TypeScript en lugar de ES6 o ES7 en algunos proyectos. De una manera bastante funcional, sin clases, similar a como usamos ES6 pero con la posibilidad de tipar cuando lo veamos adecuado. En definitiva usar la herramienta cuando aporta. Una charla muy divertida y esclarecedora.&lt;br /&gt;
En la cafetería y pasillos pude aprender mucho con Salva de la Puente y con Israel Gutierrez sobre lenguajes, linters e incluso de hablar en público.&lt;br /&gt;
Las charlas breves de Roberto Canales y Jose Luis Ugia me parecieron ambas muy buenas y me reforzaron ideas que van alineadas con sus mensajes.&lt;br /&gt;
El sábado me perdí bastantes charlas entre que llegué tarde y me marche más temprano, las veré grabadas.&lt;/p&gt;
&lt;p&gt;Conversaciones muy enriquecedoras con Ricardo Borillo, Jerónimo López, David Bonilla, Yeray Darias, Dani Latorre, Roberto Canales, Nacho Carretero, Félix López, Jose Armesto, Rubén Chavarría, Iván Abascal, Raúl Avila, Carlos Benitez, Joan León, Yamila Moreno, Daniel Piñeiro, Juan Lladó, David Fernández, Jorge del Casar, Joaquín Engelmo, Manuel Castro, Jorge Sánchez, Miguel Angel Bueno, Oscar Torres, Juan José Aguililla, Alvaro Amor, Alberto Paz, Alex Jover, Kiko Beats, Elena Torró, Javi Velasco, Javier Vélez, Jorge Senin, Rubén Díaz, Diego Rojas, Ezequiel, Isabel Rodriguez, Alba Roza, Jose Luis Ugia, Reinaldo Aguilera, Raquel Moreno, Eliezer López, Carlos Gámez, Dani Rey, David Gonzalo, Fran Raya, Daniel Cruz, Jose Turégano, Jaume Jornet, Pablo Domingo, Israel Alcázar, Raúl Navarrete, Alberto Lucas,  Alfredo de la Calle, por citar algunos nombres.&lt;/p&gt;
&lt;p&gt;Me hubiera gustado poder hablar más tiempo para charlar con colegas y haberme encontrado en persona con otros sólo conozco virtualmente pero que al final ni nos llegamos a encontrar. No parecía que fuésemos tanta gente pero sí que lo éramos porque ni nos vimos. &lt;/p&gt;
&lt;p&gt;Nos vemos en el próximo Codemotion!&lt;/p&gt;
</description>
          <pubDate>2016-11-19T18:24:43+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/11/asi-vivi-codemotion2016</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/11/asi-vivi-codemotion2016</guid>
        </item>
      
    
      
        <item>
          <title>Segundo Flejesai de 2016</title>
          <description>&lt;p&gt;En Codesai somos un equipo distribuido. Actualmente trabajamos desde Gran Canaria, Tenerife, Barcelona, Madrid y Oviedo. Hacemos pair programming remoto, mob programming y videoconferencias semanales pero aún es muy importante reunirnos fisicamente un par de veces al año. La primera reunión fue en Las Palmas en Marzo de 2016. Nos sirvió para alinearnos, definir formas de trabajar, tomar decisiones y sobre todo compartir y hacer equipo. Esta segunda edición ha sido también en Las Palmas, los días 27 y 28 de octubre de 2016. El sitio de reunión ha sido espectacular, la sala de formación de la Galería de Arte de Manuel Ojeda, en Triana. Aprovechamos para agradecer a Manuel y Daniel Ojeda esta oportunidad, su amabilidad y su confianza.&lt;/p&gt;
&lt;p&gt;Inicialmente esto se llamaba Codesai Summit pero como ahora somos muchos (un &lt;a href=&quot;http://www.academiacanarialengua.org/palabra/fleje/&quot;&gt;fleje&lt;/a&gt;), pues se nos ocurrió renombrarlo a Flejesai. Aunque fleje se usa más en la provincia de Las Palmas que en la de Santa Cruz, aceptamos la palabra como canario interinsular :-)&lt;/p&gt;
&lt;p&gt;Fue genial contar con Antonio como facilitador durante los dos días de evento, para ponerle foco y sacar todos los temas que queríamos. El jueves facilitó la dinámica &lt;em&gt;Remember the Future&lt;/em&gt; donde imaginando que nos encontrábamos 12 meses en el futuro, hablábamos de esos últimos 12 meses como si fueran el pasado. Cada uno tuvo su turno de reflexión y luego de exposición. Alguno tuvo tiempo de escribir El Quijote en 5 minutos. Esto nos permitió a todos expresar metas y objetivos para el año. Ver en qué grado compartimos la visión y en qué grado es divergente. Posteriormente nos quedamos con los puntos más interesantes de todos los que salieron y nos pusimos a analizar juntos el por qué de esos objetivos. Este ejercicio nos sirvió para poner encima de la mesa nuestros valores y principios. Aunque sentimos que compartimos muchos valores y principios, hacerlo explícito nos ayudó a definir y aclarar ideas. A continuación nuestros &lt;strong&gt;principios y valores&lt;/strong&gt; sin ningún tipo de orden de aparición:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trabajamos con entrega, lo mejor que sabemos haberlo, aportando el máximo valor que somos capaces.&lt;/li&gt;
  &lt;li&gt;Contribuir a la evolución profesional de nuestro sector:
    &lt;ul&gt;
      &lt;li&gt;Hacer la vida más fácil a los usuarios.&lt;/li&gt;
      &lt;li&gt;Pensamos que los proyectos de desarrollo caóticos deberían ser una excepción y no la norma.&lt;/li&gt;
      &lt;li&gt;Eliminar la complejidad innecesaria.&lt;/li&gt;
      &lt;li&gt;Transmitir la pasión por lo que hacemos.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Mejorar y aprender constantemente.&lt;/li&gt;
  &lt;li&gt;La satisfacción del trabajo bien hecho.&lt;/li&gt;
  &lt;li&gt;Abrirnos a otros puntos de vista.&lt;/li&gt;
  &lt;li&gt;Alinear trabajo con propósito vital.&lt;/li&gt;
  &lt;li&gt;Pertenencia y reconocimiento.&lt;/li&gt;
  &lt;li&gt;Estabilidad y sostenibilidad del grupo en lugar de crecimiento.&lt;/li&gt;
  &lt;li&gt;Diversidad en el equipo.&lt;/li&gt;
  &lt;li&gt;Poder dar a los otros lo que nos hubiera gustado tener, por ejemplo una mejor educación técnica.&lt;/li&gt;
  &lt;li&gt;Poner la tecnología al servicio del bien común.&lt;/li&gt;
  &lt;li&gt;Evitar hacer daño, evitar que la tecnología se use contra las personas, los animales o el medio ambiente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En la sesión quedó claro que queremos desarrollar nuevos cursos de formación para armar un catálogo completo. Ya estamos trabajando en ello, recogiendo piedras de conocimiento para luego hacer las composiciones.&lt;/p&gt;
&lt;p&gt;Todos pensamos que la web debe expresar mejor lo que hacemos y ser un lugar donde aglutinar nuestras publicaciones, queremos mejorarla. Es muy posible que dejemos wordpress por algo mas simple.&lt;/p&gt;
&lt;p&gt;Hemos decidido dejar de utilizar las categorías de Craftsman, Journeyman, Apprentice, Junio y Senior para referirnos a lo que somos, tanto en la web como en las propuestas a clientes. Aunque a priori nos sentimos identificados con la metáfora de la artesanía del software, preferimos que la gente se haga una idea de nosotros a través de nuestros propios principios y valores.&lt;/p&gt;
&lt;p&gt;En las propuestas a proyectos para clientes no enviaremos a individuos sino como mínimo parejas. Los costes serán por tanto por parejas o grupos más grandes pero no por persona. Realmente no necesitamos categorizar a nadie. Y queremos trabajar en pares o en grupo como lo venimos haciendo.&lt;/p&gt;
&lt;p&gt;Queremos seguir teniendo presencia en eventos importantes de la comunidad, incluso dar el salto a eventos de fuera como SocratesUK. Organizar una nueva edición de Socrates Canaries nos ilusiona.&lt;/p&gt;
&lt;p&gt;Queremos balancear la carga entre trabajo de mentor y desarrollador. Nos gusta el desarrollo de producto y por eso buscamos disponer de más días donde somos desarrolladores y no mentores. Nos encanta hacer formación y mentoring pero no que sea lo mayoritario.&lt;/p&gt;
&lt;p&gt;Queremos mejorar nuestro conocimiento en el paradigma funcional porque pensamos que puede mejorar la calidad de los productos que hacemos. Mantenernos al día con nuevas tecnologías, por ejemplo temas como React y Redux. Practicar más con arquitecturas como CQRS, Event Sourcing, modelo de actores...&lt;/p&gt;
&lt;p&gt;Seguir dándole cuerpo a nuestro programa de aprendices y dar la bienvenida a nuevos aprendices, y si conseguimos que sean chicas mucho mejor.&lt;br /&gt;
No queremos crecer en número, crecer por crecer no es ningún objetivo. Pero si llega un momento en que nos sentimos cómodos y nos queremos comprometer a tener un nuevo compañero, pues nos gustaría que fuese una compañera.&lt;/p&gt;
&lt;p&gt;Durante el evento aparte de pasar todo el día juntos, tuvimos largas cenas y sesiones nocturnas de charlas técnicas y no tan técnicas hasta la madrugada, donde pudimos compartir conocimiento, que es una de las cosas que más nos gusta del grupo. Echarnos unas risas juntos y algo de trolleo entre nosotros pero en plan sanote.&lt;/p&gt;
&lt;p&gt;Hicimos retrospectiva, con un formato muy abierto donde todo el mundo podía expresar su punto de vista y nos ha salido una buena lista de acciones a realizar. Todo queda apuntado para revisarlo periódicamente y cuando nos juntemos en el próximo semestre mirar atrás y ver el avance.&lt;/p&gt;
&lt;p&gt;Estos encuentros semestrales son altamente motivadores. Ya tenemos ganas del próximo.&lt;/p&gt;
</description>
          <pubDate>2016-11-04T18:19:11+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/11/segundo-flejesai-de-2016</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/11/segundo-flejesai-de-2016</guid>
        </item>
      
    
      
        <item>
          <title>Damos la bienvenida a Manuel Rivero</title>
          <description>&lt;p&gt;Menudo notición! &lt;a href=&quot;https://twitter.com/trikitrok&quot; target=&quot;_blank&quot;&gt;Manuel Rivero&lt;/a&gt; se une al equipo Codesai! Fue algo antes de Software Craftsmanship Barcelona 2016 cuando Manuel me escribió expresando su intención de venir. La verdad es que no estabamos buscando crecer en número, pero a todo el equipo le encantó la idea. La mayoría le conocíamos y le tenemos como referente en el &lt;a href=&quot;https://plus.google.com/communities/114859785439968913587&quot; target=&quot;_blank&quot;&gt;aprendizaje, en la comunidad&lt;/a&gt; y en muchos otros temas como la programación funcional. Manuel es fuente de conocimiento y no dudamos ni un segundo en aprovechar la oportunidad.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://garajeando.blogspot.com.es/2016/11/codesai.html&quot; target=&quot;_blank&quot;&gt;Este post escrito en su blog&lt;/a&gt; habla acerca de su motivación para venir, en primera persona.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/11/IMG_0196.jpg&quot;&gt;&lt;img src=&quot;/assets/IMG_0196-1024x768.jpg&quot; alt=&quot;img_0196&quot; class=&quot;alignleft size-large wp-image-3168&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Le conocí hace ya años en un curso abierto de TDD que impartí en Madrid. Es una de esas personas que se pagó el curso de su bolsillo, incluyendo viaje a otra ciudad, gastos de hotel y días de vacaciones. Este tipo de acciones dicen mucho de un profesional, no dejo de admirar a los que lo hacen y he aprendido mucho de todos ellos, además de que les sigo la pista todo lo que puedo. Desde entonces nos hemos encontrado muchas más veces en Barcelona, por ejemplo en una edición posterior del mismo curso donde me estuvo ayudando y en eventos de la comunidad. Es alucinante observar su evolución a lo largo de estos años. En todas las katas que he estado con Manuel, he aprendido cosas relevantes. Recuerdo por ejemplo el &quot;double dispatch&quot; de Kent Beck que pese a haberlo leído no lo interioricé hasta que nos lo mostró con un ejemplo. Estamos muy ilusionados con todo lo que nos va a aportar, la mejor persona que puede entrar al equipo es aquella que tiene mucho que enseñarte. Desde ya, es nuestro Jedi del Clojure y del paradigma funcional. &lt;/p&gt;
&lt;p&gt;Ahora podemos decir que Codesai tiene presencia física en Barcelona, otro motivo más para visitar más a menudo esta maravillosa ciudad. &lt;/p&gt;
&lt;p&gt;Este cambio nos ha vuelto a motivar para retomar la preparación de nuevos cursos: Diseño Orientado a Objetos, Patrones, Refactoring y pronto seguro que también nos animamos con lo funcional. También está echando una mano desde ya con el desarrollo de productos para clientes, desarrollos que estamos llevando a cabo en estos momentos, participando en las sesiones de pair programming y mob programming.&lt;/p&gt;
&lt;p&gt;Aunque lo anunciamos ahora, ya hace algunas semanas que estamos trabajando juntos. La semana pasada celebramos nuestro encuentro semestral, el Codesai Summit ahora renombrado como Flejesai (#flejesai16) y tuvimos la suerte de que aún estaba Modesto así que estabamos practicamente todos en el mismo lugar y lo pasamos genial. Pronto habrá un post sobre el Flejesai :-)&lt;/p&gt;
&lt;p&gt;Aunque no estamos buscando crecer, es decir que no tenemos por objetivo ser más personas, sí tiene que ocurrir nos gustaría mucho que fuese una chica. Pensamos que la diversidad es muy importante. Ahí lo dejo ;-)&lt;/p&gt;
</description>
          <pubDate>2016-11-02T22:17:14+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/11/damos-la-bienvenida-a-manuel-rivero</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/11/damos-la-bienvenida-a-manuel-rivero</guid>
        </item>
      
    
      
        <item>
          <title>Estuvimos en la Software Craftsmanship BCN 2016</title>
          <description>&lt;p&gt;&lt;img class=&quot;wp-image-3135 alignright&quot; src=&quot;/assets/84024f3efe.jpg&quot; alt=&quot;84024f3efe&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Descripción del evento&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Este año varios miembros de Codesai estuvimos en la Software Craftsmanship de Barcelona. Todo un logro viendo que las primeras entradas fueron arrasadas, algo que habla muy bien de un evento que plantea dudas sobre si debería crecer más.&lt;/p&gt;
&lt;p&gt;Por fortuna, aunque las entradas se hayan vendido tan rápido, ha habido mucha cara nueva en el evento, lo que es realmente positivo viendo que el año pasado tardaron casi una semana en terminarse y que en un principio se pensaba que la mayoría de participantes habrían acudido en anteriores ediciones.&lt;/p&gt;
&lt;p&gt;A diferencia de la Pamplona Software Craftsmanship que se realizó este mismo año el 17 y 18 de junio, el evento consta principalmente de charlas que se eligen después de que los ponentes las hayan presentado durante el C4P. Durante el último día del evento se dan unas cuantas horas para proponer sesiones para el Open Space. Contar con estos contrastes entre eventos dentro de la propia comunidad es algo muy valioso. Con cada evento al que asistimos nos percatamos que experiencias pasadas de otros eventos acaban reflejándose en mejoras para los siguientes.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignleft wp-image-3134&quot; src=&quot;/assets/e05e30e614.jpg&quot; alt=&quot;e05e30e614&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Los sponsors del evento han servido a los asistentes con una camiseta chulísima con la temática del evento y nos ofrecieron una bolsa genial con merchandising muy útil durante el evento que nos encantó a la mayoría de los asistentes. También mencionar sobre el lugar, un verdadero acierto, aunque a veces las salas se llenaban mucho y sentarse era una utopía, era muy cómodo estar en ellas y estaban muy bien ventiladas. Algo que se agradece de verdad.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Gracias a la organización!&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Sin duda, un gran evento está respaldado por una gran organización. La Software Craftsmanship BCN 16 contó con una de las mejores ;). Había disponible un tablón de feedback desde la primera hora al que le echaban un ojo y procuraban asistir en lo posible. Durante la apertura se explicó el evento, las charlas fueron sobre ruedas, sin retrasos y durante el cierre se realizó una gran retrospectiva. Si es que no se encontraron problemas por ningún lado, muchas gracias y genial trabajo!&lt;/p&gt;
&lt;p&gt;Todas las charlas fueron grabadas con el apoyo de Codely.tv y los miembros de la organización, lo cual es un fantástico aporte, pues siempre hay horas en las que no sabes a qué charla ir :)&lt;/p&gt;
&lt;p&gt;Durante el evento se agradeció el tener varios momentos en los que era sencillo disfrutar del networking.&lt;/p&gt;
&lt;p&gt;El desayuno y la comida (compuesta básicamente por pequeños snacks de la mano de un catering) se ofrecían en mesas repartidas en dos salas. Todo el mundo se dirigía a picar algo de pie mientras charlaba. Se generaba buen ambiente y se abrían las puertas al networking. Por no mencionar que la comida estaba genial!&lt;/p&gt;
&lt;p&gt;Además, siempre estaban disponibles la máquina de café y algunos refrigerios para todo aquél que se quedase fuera de una charla mientras conversaba con otros asistentes.&lt;/p&gt;
&lt;p&gt;La primera noche del evento se organizó una gran cena en un enorme local muy cerca del evento, a la que asistió casi todo el mundo. Ello permitió que el primer día no acabase a las 19h00 como marcaba la agenda, sino que se extendió hasta bastante tarde (de madrugada para los valientes ;). La cena ayudó a que se dieran más oportunidades para conocer gente y en general aumentó la sensación de participación en el evento más allá de lo que es asistir a las charlas.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;wp-image-3132 aligncenter&quot; src=&quot;/assets/6db0f48d11.jpg&quot; alt=&quot;6db0f48d11&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Charlas &lt;/b&gt;&lt;b&gt;a las que asistimos&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Néstor Salceda: &lt;/b&gt;&lt;b&gt;Experiencias con Interaction Driven Design.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Néstor nos contó la experiencia de su grupo usando Interaction Driven Design. Nos sorprendió muy gratamente observar cómo grupos distintos, que no tienen mucha comunicación de forma regular, hayan llegado a conclusiones tan similares en el uso de esta arquitectura.&lt;/p&gt;
&lt;p&gt;Nos valió para confirmar muchas de nuestras propias ideas. Una charla realmente agradable donde varias personas se animaron a poner código para mostrarnos sus aproximaciones y recibir feedback, entre ellos Alfredo y Ronny.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Carlos Villuendas: &lt;/b&gt;&lt;b&gt;Reactjs desde las trincheras, un año después&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Carlos asistió el año pasado al evento dando la primera parte de esta charla. En ella comentaba que Fotocasa se había propuesto emplear React.js como librería de Frontend. Un año más tarde, vuelve a comentar cómo ha sido la experiencia. Dando todo un manual en el uso de esta librería basándose en la propias vivencias de su grupo. Una charla genial donde Carlos se mostró dispuesto a explicar con detalle cada cosa que se le preguntaba. Muy inspiradora.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Sergi González y Javier Ferrer: &lt;/b&gt;&lt;b&gt;Desarrollar un chat con Scala, Akka y WebSockets desde 0. ¡¿Qué puede salir mal?!&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Sergi y Javi nos contaron como en su empresa surgió la necesidad de meter en la aplicación un chat. Ello llevó a una primera implementación de un legacy escrito en PHP y cómo las necesidades de escalabilidad les plantearon usar modelo de actores con Akka y usar Scala como lenguaje de desarrollo. Empezando con una visión pero gran desconocimiento sobre el tema, consiguieron terminarlo después de un año y nos sirven de toda esa experiencia para hablarnos sobre ello, y acabar con nuestras mentes.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Joel Rodríguez: Embracing flow for maximum productivity&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Joel nos estuvo contando la complejidad que implica alcanzar el flow y las tácticas que le han resultado efectivas en su experiencia. El flow siempre es algo que nos parece muy abstracto pero que sabemos detectar cuando lo estamos experimentando. Joel intenta convertirlo en algo que alcancemos de forma más consciente.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Xavi Gost: CDD (Desarrollo dirigido por consenso)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Xavi nos estuvo explicando cómo están aplicando esta filosofía de equipo en Flywire. A destacar el rechazo del argumento de autoridad, que implica no obedecer ciegamente a otra persona con mayor autoridad. El argumento siempre debería ser analizado y contra argumentado si fuera necesario, siempre dentro de lo razonable. Rechazar un argumento de autoridad no significa rechazar una mayor experiencia. De forma muy resumida, los equipos están organizados en squads que hacen pairing y no se hacen Pull Requests, sino que todos los miembros del equipo leen el código y son libres de añadir un Concern en una feature que se debatirá en la siguiente Code Review. Se estimula la propiedad colectiva del código y el ambiente de equipo. Una charla que nos aportó mucho valor.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;wp-image-3133 aligncenter&quot; src=&quot;/assets/2520bced6c.jpg&quot; alt=&quot;2520bced6c&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Vaughn Vernon: &lt;/b&gt;&lt;b&gt;Event Storming for Fun and Profit&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;En este workshop de dos horas, Vernon nos brindó una sesión de Event Storming. Esta práctica de descubrimiento de dominio propuesta por Alberto Brandolini, consiste en unir a Product Owners y desarrolladores para crear algo parecido a un diagrama de eventos que nos permite identificar las acciones más importantes de una parte o todo nuestro negocio.&lt;/p&gt;
&lt;p&gt;Los asistentes nos dividimos en tres grupos donde modelamos un dominio a nuestra elección. La sesión fue muy divertida y los asistentes del grupo en el que estábamos salieron muy satisfechos con la actividad. Sin duda una práctica muy valiosa para descubrir negocio y que pondremos más en práctica.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Participación de Codesai&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Varios de nosotros tuvimos una o más charlas durante el evento. Carlos rompió el hielo a primera hora del primer día dando su charla &lt;b&gt;Designing in the Small. Principles and Practices&lt;/b&gt;&lt;b&gt;. &lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Durante el mismo día Alfredo dio una charla sobre &lt;b&gt;Connascense&lt;/b&gt; (que iba a presentar junto con Fran, que no pudo asistir al evento) hablando de los distintos tipos de acoplamiento  que podemos tener en cuenta para buscar heurísticas con las que evaluar nuestro código.&lt;/p&gt;
&lt;p&gt;Alfredo también participó en el OpenSpace, proponiendo una sesión sobre Microservicios. Durante una de las Lightning Talk, surgió este tema y se notaba que la gente se quedó con ganas de más. Por ello, la sala estaba a reventar y Alfredo se ofreció a empezar el debate en inglés dado que varios asistentes eran nativos. Una charla muy medida y en la que todos salieron muy contentos.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone wp-image-3131&quot; src=&quot;/assets/936382649d.jpg&quot; alt=&quot;936382649d&quot; /&gt;&lt;br /&gt;
&lt;img class=&quot;alignnone wp-image-3142&quot; src=&quot;/assets/5abd54c406.jpg&quot; alt=&quot;5abd54c406&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Entre las Lightning Talks, Luis dió una sobre la toma de decisiones en un proyecto que tiene problemas, cómo ser eficiente en la práctica, dando varios puntos y consejos basados en su propia experiencia. Dani dió otra sobre el tema de Lectura Rápida, desmitificando algunos métodos y clarificando cómo la estaba practicando, recomendando su bibliografía.&lt;/p&gt;
&lt;p&gt;Luis también facilitó la Kata Potter en el Open Space junto con Álvaro García. La retrospectiva de la kata se comió casi el siguiente slot de tiempo pues hubo un contraste de estilos muy interesante.&lt;/p&gt;
&lt;p&gt;Y muchas gracias a los compañeros de Codesai que se repartieron la asistencia a las charlas para luego poner en común lo aprendido, o que las dejaron pasar para hacer networking. Día a día mejoramos como equipo!&lt;/p&gt;
</description>
          <pubDate>2016-11-02T16:14:56+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/11/estuvimos-en-la-software-craftsmanship-bcn-2016</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/11/estuvimos-en-la-software-craftsmanship-bcn-2016</guid>
        </item>
      
    
      
        <item>
          <title>Refactoring tests using builder functions in Clojure/ClojureScript</title>
          <description>&lt;p&gt;Using literals in your tests can have some advantages, such as, readability and traceability. 
&lt;br /&gt;&lt;br /&gt;
While this is true when the data are simple, it’s less so when the data are nested, complex structures.
In that case, using literals can hinder refactoring and thus become an obstacle to adapting to changes.
&lt;br /&gt;&lt;br /&gt;
The problem with using literals for complex, nested data is that the knowledge about how to build such data is spread all over the tests. There are many tests that know about the representation of the data.
&lt;br /&gt;&lt;br /&gt;
In that scenario, nearly any change in the representation of those data will have a big impact on the tests code 
because it will force us to change many tests.
&lt;br /&gt;&lt;br /&gt;
This is an example of a test using literals, (from a ClojureScript application
using &lt;a href=&quot;https://github.com/Day8/re-frame&quot;&gt;re-frame&lt;/a&gt;, I’m developing with &lt;a href=&quot;https://twitter.com/zesc&quot;&gt;Francesc&lt;/a&gt;), 
to prepare the &lt;i&gt;application state&lt;/i&gt; (usually called &lt;i&gt;db&lt;/i&gt; in &lt;a href=&quot;https://github.com/Day8/re-frame&quot;&gt;re-frame&lt;/a&gt;):
&lt;br /&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/trikitrok/50a48e7899ba820ca140835112e8ad0b.js&quot;&gt;&lt;/script&gt;
As you can see, this test knows to much about the structure of &lt;i&gt;db&lt;/i&gt;. 
&lt;br /&gt;&lt;br /&gt;
There were many other tests doing something similar at some nesting level of the &lt;i&gt;db&lt;/i&gt;. 
&lt;br /&gt;&lt;br /&gt;
To make things worse, at that moment, we were still learning a lot about the domain, so the structure of the &lt;i&gt;db&lt;/i&gt; was suffering changes with every new thing we learned. 
&lt;br /&gt;&lt;br /&gt;
The situation was starting to be painful, since any refactoring provoke many changes in the tests, so we decided to fix it.
&lt;br /&gt;&lt;br /&gt;
What we wanted was a way to place all the knowledge about
the representation of the &lt;i&gt;db&lt;/i&gt; in just one place (i.e., remove duplication),
so that, in case we needed to change that representation, the impact of the change would be
absorbed by changing only one place.
&lt;br /&gt;&lt;br /&gt;
A nice way of achieving this goal in object-oriented code, and at the same time making
your tests code more readable, is by using &lt;a href=&quot;http://www.natpryce.com/articles/000714.html&quot;&gt;test data builders&lt;/a&gt; which use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Builder_pattern&quot;&gt;builder pattern&lt;/a&gt;, but how can we do these &lt;i&gt;builders&lt;/i&gt; in Clojure?
&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://aphyr.com/posts/321-builders-vs-option-maps&quot;&gt;Option maps or function with keyword arguments are a nice alternative&lt;/a&gt; to traditional builders in dynamic languages such as Ruby or Python.
&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/12633670/whats-the-clojure-way-to-builder-pattern&quot;&gt;In Clojure we can compose &lt;i&gt;functions with keyword arguments&lt;/i&gt; to get very readable builders&lt;/a&gt; that also hide the representation of the data.
&lt;br /&gt;&lt;br /&gt;
We did TDD to write these &lt;i&gt;builder functions&lt;/i&gt;. These are the tests for one of them, the &lt;i&gt;db builder&lt;/i&gt;:
&lt;br /&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/trikitrok/093f10a3af82422d1eff8a83323aa7a7.js&quot;&gt;&lt;/script&gt;
and this is the &lt;i&gt;db builder&lt;/i&gt; code:
&lt;br /&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/trikitrok/1832b30d4a397acc0d24c3659edf1161.js&quot;&gt;&lt;/script&gt;
which is using &lt;a href=&quot;http://clojure.org/guides/destructuring&quot;&gt;associative destructuring&lt;/a&gt; on the function’s optional arguments to have a function with keyword arguments, and creating proper default values using the &lt;i&gt;:or keyword&lt;/i&gt; (have a look at the &lt;a href=&quot;https://gist.github.com/trikitrok/e24b0a8ecacf8c1ae726&quot;&gt;material of a talk about destructuring I did some time ago&lt;/a&gt; for &lt;a href=&quot;http://www.meetup.com/ClojureBCN/&quot;&gt;Clojure Barcelona Developers community&lt;/a&gt;).
&lt;br /&gt;&lt;br /&gt;
After creating &lt;i&gt;builder functions&lt;/i&gt; for some other data used in the project, our test started to read better and to be robust against changes in the structure of &lt;i&gt;db&lt;/i&gt;.
&lt;br /&gt;&lt;br /&gt;
For instance, this is the code of the test I showed at the beginning of the post, but now using &lt;i&gt;builder functions&lt;/i&gt; instead of literals:
&lt;br /&gt;&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/trikitrok/e8a8244ebc0fa82352bb8003a82da077.js&quot;&gt;&lt;/script&gt;
which not only hides the representation of &lt;i&gt;db&lt;/i&gt; but also eliminates details that are not used in particular tests, while still being as easy to read, if not easier, than the version using literals.
&lt;br /&gt;&lt;br /&gt;
We have seen how, by composing &lt;i&gt;builder functions&lt;/i&gt; and using them in our tests, we managed to reduce
the surface of the impact that changes in the representation of data might have on our tests. 
&lt;i&gt;Builder functions&lt;/i&gt; absorb the impact of those changes, and enable faster refactoring, and, by doing so, enable adapting to changes faster.&lt;/p&gt;
</description>
          <pubDate>2016-10-07T22:17:14+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/10/refactoring-tests-using-builder-functions-in-clojure-clojureScript</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/10/refactoring-tests-using-builder-functions-in-clojure-clojureScript</guid>
        </item>
      
    
      
        <item>
          <title>Muchas gracias Modesto</title>
          <description>&lt;p&gt;Hace unas semanas recibimos una noticia con sabor agridulce. Nuestro gran compañero y mejor profesional, Modesto, se marcha de Codesai. No resulta fácil perder a un compañero del que todos aprendemos muchísimo y que siempre está apoyando al equipo ante cualquier dificultad. Pero la verdad es que nos alegramos de que pueda tomar el rumbo que más le beneficie en este momento. Nuestra relación no se ve afectada en absoluto y seguiremos aprendiendo juntos en los eventos de comunidad y meetups de Codesai. Las puertas siempre están abiertas para Modesto. Han sido dos años estupendos trabajando juntos, ¡hasta compartiendo piso!&lt;/p&gt;
&lt;p&gt;Modesto habla de la experiencia en &lt;a href=&quot;http://www.modestosanjuan.com/nuevos-retos/&quot; target=&quot;_blank&quot;&gt;un post en su blog&lt;/a&gt;. Queremos aprovechar para escribir un pequeño homenaje como muestra de agradecimiento por su entrega y su aporte a todo el equipo. Esto es lo que cada uno de nosotros dice:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Carlos:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;He conocido a pocas personas capaces de aprender y asimilar tan rápido como Modesto. Con capacidad de sacarle infinidad de horas de rendimiento al día. Es rápido y eficaz ofreciendo soluciones. No sé cómo le da tiempo a leer tanto. Contar con él como experto en la plataforma .Net suponía una tranquilidad que no tiene precio. Se nos va uno de nuestros mayores tecnólogos. Solo espero que volvamos a coincidir pronto y que le vaya de maravilla.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fran:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pragmatismo y capacidad de aprender a un ritmo increíble son dos de las cosas que me llegan a la cabeza cuando intento definir alguna de las cualidades de Modesto como profesional. Sus conocimientos en tecnologías de Microsoft son un seguro de vida para embarcarte en un proyecto que trate con ellas sin temer por su tamaño. Su humor y las ganas de debatir siempre hacen que cualquier charla deje de convertirse en banal para tornarse en alguna discusión interesante. He aprendido mucho estos años de él dentro de Codesai y espero que, aunque quizás con menos frecuencia, lo siga haciendo. No hace falta que le desee suerte allá dónde vaya, ya lleva una mochila repleta de habilidades y experiencias para hacer lo que le apasione.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alfredo:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hace ya dos años, madre mía como pasa el tiempo de rápido!, nos juntamos cuatro locos para colaborar y trabajar juntos en un proyecto con mucha incertidumbre y muchas incógnitas, ni cortos ni perezosos cogimos las maletas y allá aparecimos en las palmas. Uno de esos locos era Modesto, y sin duda gracias a sus aportaciones ese proyecto hoy podemos apuntarlo en la libreta de éxitos profesionales y también en la de los personales. Sus conocimientos de .NET han sido fundamentales para compensar las carencias que otros teníamos,  no deja de ser sorprendente ver como al final la tecnología es solo un detalle y lo que nos une como profesionales esta en la pasión por nuestro trabajo y en las prácticas y los principios esos que tan pesados somos repitiendo y no voy a enumerar ahora.  Mucha suerte en tus proyectos futuros!, y para terminar tópicazo: esto no es un adios es un hasta luego, porque al final este mundo nuestro es más pequeño de lo que parece y el camino del craftsman  esta lleno de cruces e intersecciones.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Luis:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No me cabe la menor duda que Modesto disfrutará y dejará huella allí donde esté. A mí me gustaría destacar su lado humano: la capacidad de ponerse en el lugar del otro y hablar desde ahí. Con una facilidad para hablar claro y mantener un debate profundo a la vez que aportar toques de humor cuando hay que relajar el ambiente. Muchas gracias por tu disposición a echar una mano siempre. Nos vemos en el camino.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ronny:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hablar de Modesto para mí es en primer lugar hablar de una persona a la que aprecio muchísimo. Desde el día que lo conocí en un coding dojo hasta hoy que escribo esto, no he parado de aprender de él. Sin duda, es una de las personas más inteligentes que conozco, pero si hay algo que me gustaría resaltar de él, es su pasión por el software. Me ha transmitido grandes valores como la humildad y la transparencia, aprender de Modesto no solo me ha hecho mejor programador sino que también me ha ayudado a ser mejor persona. Para mí es sin duda un ejemplo a seguir. La primera semana que estuvimos en el piso fue impresionante, la recuerdo perfectamente, buscamos un pet project, me enseñó a usar dobles de pruebas, me enseñó que eran los diagramas de secuencia y más. Pero eso no es todo, sino que ha medida que ha ido pasando el año, cada semana que hemos coincidido en el piso ha sido brutal. Aprender de alguien que es técnicamente tan bueno es increíble, hemos tenido mucha suerte de contar con él. Así que Modesto, me gustaría darte las gracias. Gracias por todo lo que me has transmitido este año, gracias por mostrarte siempre dispuesto a enseñarme, gracias por todos tus consejos y gracias por ser en definitiva una gran persona. Espero que te vaya muy bien en este próximo paso en tu camino (sé que así será).  Aunque profesionalmente hablando nuestros caminos se separen, para mí seguirás siendo siempre un mentor, un compañero en el camino del aprendizaje y sobre todo un gran amigo. Espero que sean excusas suficientes para seguir teniendo nuestras largas conversaciones sobre nuestra gran pasión. Además tenemos un pet project que mantener. Mucha suerte!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Miguel:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cuando pienso en Modesto siempre se me viene a la cabeza, la palabra fascinación. Fascinación por su conocimiento técnico, fascinación por las reflexiones personales que me ha brindado, fascinación por la pasión que trasmite con un teclado en las manos y fascinación porque solo necesita dormir 4 horas al día y estar más descansado que yo :P. Creo que como grupo hemos tenido mucha suerte de contar con tu presencia, no solo por la más que conocida capacidad técnica en .NET sino porque he aprendido que no hay que tener miedo a arremangarse y meterse en el fango para solventar problemas a los que preferirías no enfrentar y hacer otras cosas ya que puedes aportar valor en ese área. Me has enseñado a tener mucho más espectro en el significado de aportar valor y quiero agradecer la cantidad de horas que nos has dedicado con nuestros pet projects, de tener una duda a altas horas de la noche y conectarte a echar una mano y dar tu punto de vista y de no tratar de servirnos en bandeja la respuesta y dejarnos experimentar por el &quot;aprendizaje por dolor&quot;. Muchas gracias por todo y de verdad espero que como menciona Alfredo, nuestros caminos se vuelvan a cruzar porque un camino es siempre mejor si vas acompañado de personas fascinantes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dani:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ahí donde vaya la conversación, Modesto siempre surge con un: &quot;Pues una vez hice eso&quot; o &quot;En tal momento trabajé en algo similar&quot;. Lleno de experiencia y con infinidad de recursos, dedicándole un buen cacho del día a seguir investigando temas, pero siempre con tiempo para responder una pregunta o echarte un cable con lo que sea. Coincidimos en muchas cosas y diferimos en otra tantas, una conversación con Modesto siempre es productiva y acabará con algo nuevo aprendido. Seguiremos charlando y nos seguiremos viendo ;), muchas gracias por todo!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jose:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Personalmente, cuando pienso en Modesto, una de las primeras cosas que se me vienen a la mente es su experiencia y su capacidad de resolución. Me hubiera encantado haber trabajado en algún proyecto con él, aunque lamentablemente no ha podido ser así. Independientemente a ello, considero que he aprendido mucho de él, ya que en cada conversación con Modesto obtienes nuevos conocimientos.&lt;/p&gt;
&lt;p&gt;A todo esto, muchas gracias por todo Modesto, por compartir tus conocimientos y experiencias con nosotros. Es una pena que te vayas del equipo, no obstante, espero que tengas mucha suerte en tu nueva etapa y que todo te vaya muy bien.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Antonio:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Esta debe ser la cuarta vez que empiezo mi parte de este post porque todos me suenan a epitafio.&lt;br /&gt;
Supongo que es porque tengo una gran sensación de pérdida y hoy sin ir más lejos, pegándome con .NET creo que vamos a echar de menos su conocimiento en el equipo.&lt;/p&gt;
&lt;p&gt;Gracias Modesto por esas conversaciones profundas. Y por enseñarme que después de un buen intercambio dialéctico se puede tener el coraje y la humildad de reconocer cuando se ha cambiado de opinión. Muy pocas veces he visto eso.&lt;/p&gt;
&lt;p&gt;¡Ala! ¡Mucha suerte en tu nueva etapa y a dar guerra en la comunidad!&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
          <pubDate>2016-10-07T15:57:39+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/10/muchas-gracias-modesto</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/10/muchas-gracias-modesto</guid>
        </item>
      
    
      
        <item>
          <title>Estuvimos en Habitissimo</title>
          <description>&lt;p&gt;Gracias a &lt;a href=&quot;https://twitter.com/voylinux&quot;&gt;Pablo Bernardo&lt;/a&gt; y &lt;a href=&quot;https://twitter.com/jordillull&quot;&gt;Jordi Llull&lt;/a&gt; de &lt;a href=&quot;https://www.habitissimo.es/&quot;&gt;Habitissimo&lt;/a&gt;, pudimos disfrutar de tres días de trabajo y conferencias en Palma de Mallorca, en el ParcBit. Fuimos Luis Rovirosa y yo a impartir una formación de TDD y Clean Code para 15 developers entusiasmados con aprender. Nos sorprendió gratamente el ambientazo de trabajo tan bueno que se respira allí y lo chula que es la oficina, con sus salas temáticas para reuniones, ocio y hasta espacio para meditación. La gente tenía muy interiorizado lo de ser productivo con la herramienta, manejaban casi todo con shortcuts, los entornos de desarrollo eran rápidos y pulidos... gente muy joven con una capacidad de aprendizaje muy alta, las pillaban al vuelo.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/10/photo_2016-10-07_12-58-38.jpg&quot;&gt;&lt;img class=&quot;alignleft wp-image-3078 &quot; src=&quot;/assets/photo_2016-10-07_12-58-38-1024x768.jpg&quot; alt=&quot;photo_2016-10-07_12-58-38&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Durante la formación hicimos pair programming de una manera bastante ergonómica con dos teclados, dos ratones y dos pantallas conectadas a cada máquina. El espacio de trabajo quedaba muy cómodo tanto para los participantes como para nosotros que paseábamos por detrás observándoles trabajar o participando en las discusiones.&lt;br /&gt;
Lo pasamos muy bien.&lt;/p&gt;
&lt;p&gt;Conocer y trabajar para Habitissimo era especialmente atractivo para mí porque en 2010 nosotros habíamos emprendido con Maven Charts, la misma idea de Habitissimo, pero que no conseguimos rentabilizar. Aprendimos muchísimo pero económicamente fracasamos. Ver que a pesar de toda la competencia y de lo difícil que se presentaba el mercado nacional, alguien había conseguido hacer triunfar la idea, me alegra mucho. Fue un placer conocer a los fundadores y charlar un ratito con ellos. En cierto modo era como ver &quot;mi idea&quot; triunfar. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://scontent-mad1-1.cdninstagram.com/t51.2885-15/e35/14360167_901899213287787_1124782772964032512_n.jpg?ig_cache_key=MTM1MDY1Nzg5MTkzNzUwMjU3Mg%3D%3D.2&quot;&gt;&lt;img src=&quot;/assets/14360167_901899213287787_1124782772964032512_n.jpg?ig_cache_key=MTM1MDY1Nzg5MTkzNzUwMjU3Mg%3D%3D.2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El último día tuvo lugar un Code Retreat abierto a todo el mundo donde vino mucha gente para ser un día laboral, fue todo un éxito de convocatoria y lo pasamos muy bien. Por la tarde hubieron conferencias pero como teníamos vuelo nos quedamos con la pena de ver solamente una, la de &lt;a href=&quot;https://twitter.com/jllado&quot; target=&quot;_blank&quot;&gt;Juan Lladó&lt;/a&gt; sobre su experiencia con TDD, charla que me gustó mucho. Yo abrí la jornada de charlas con una sobre diseño.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pbs.twimg.com/media/CuKcgJJWcAAQZoz.jpg&quot;&gt;&lt;img class=&quot;&quot; src=&quot;/assets/CuKcgJJWcAAQZoz.jpg&quot; /&gt;&lt;/a&gt; En una de las salas de ocio había una hamaca y enseguida me acordé del &lt;a href=&quot;https://www.youtube.com/watch?v=dYBjVTMUQY0&quot; target=&quot;_blank&quot;&gt;video de Atlassian Spooning&lt;/a&gt; así que nos queda una foto para el recuerdo gracioso. No sé si después de mostrarles el vídeo harán spooning en la hamaca :-D&lt;/p&gt;
</description>
          <pubDate>2016-10-07T11:39:27+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/10/estuvimos-en-habitissimo</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/10/estuvimos-en-habitissimo</guid>
        </item>
      
    
      
        <item>
          <title>Lo que me aporta TDD</title>
          <description>&lt;p&gt;Hace tiempo que vengo queriendo reescribir nuestro libro de TDD para mejorarlo con todo lo que hemos aprendido en estos 7 años y todo el feedback que hemos recibiendo por parte de los lectores, a los cuales estamos muy agradecidos. Pero no se cuándo me podré sentar durante un puñado de meses a abordar semejante reto.&lt;/p&gt;
&lt;p&gt;Sin embargo, los atículos y críticas destructivas que se leen sobre esta práctica de vez en cuando, tanto en inglés como en castellano, hacen que me apetezca volver a hablar de lo mucho que me aporta esta práctica.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lo que me aporta TDD:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A los programadores nos encanta el &lt;strong&gt;feedback rápido&lt;/strong&gt;, todos los que disponemos de algún &lt;a href=&quot;https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop&quot;&gt;REPL&lt;/a&gt; en nuestro lenguaje, estamos encantados. En el browser es facilísimo abrir la consola para escribir una línea de JavaScript y averiguar si determinada expresión se evalúa como creemos. Igual pasa con las consolas de Ruby y de Python. Hasta para C# suelo tirar de &lt;a href=&quot;http://csharppad.com/&quot;&gt;C# Pad&lt;/a&gt; muchas veces, y de &lt;em&gt;&quot;Inmmediate Window&quot;&lt;/em&gt; en VS. Hacer pruebas rápidas y pequeñas en un REPL es una forma de TDD a mi modo de ver. Te permite avanzar en pequeños pasos seguros. A veces practicando TDD escribo un test que poco más tarde borro, porque lo único que quería era feedback rápido, no pretendía dejar una prueba escrita.&lt;/p&gt;
&lt;p&gt;El otro gran beneficio que obtengo practicando TDD es la &lt;strong&gt;simplicidad&lt;/strong&gt;. Soy un experto complicándome la vida, pero gracias a la regla de escribir el código mínimo para que el test pase y nada más, consigo implementaciones mucho más simples de las que me quedaban antes. El prestar mucha atención a las generalizaciones progresivas, como dice &lt;a href=&quot;https://en.wikipedia.org/wiki/Transformation_Priority_Premise&quot;&gt;Transformation Priority Premise&lt;/a&gt;, hace que ahora use más veces la recursividad, en soluciones que naturalmente son recursivas. Antes simplemente me volvía loco con bucles. Un efecto secundario de ir al mínimo es que se me ocurren casos de uso que ni se me habían pasado por la cabeza, a veces casos límite. Es decir que el truco de hackear la implementación para que el test pase me hace ser consciente de casos importantes a cubrir, que quizás nunca hubiese tenido en cuenta. Por tanto me ayuda a encontrar problemas más temprano.&lt;/p&gt;
&lt;p&gt;TDD me obliga a &lt;strong&gt;pensar antes de codificar&lt;/strong&gt;. Si escojo un enfoque inside-out, tengo que haber descompuesto muy bien el problema antes para estar seguro que esa pieza de bajo nivel me va a encajar en el puzzle. Si escojo outside-in me obligo a pensar en dependencias, paso de mensajes, diseño orientado a objetos. Pienso que TDD no lleva a un buen diseño por sí, pero teniendo &lt;strong&gt;conocimientos de diseño&lt;/strong&gt;, me ayuda a detectar problemas en el mismo. Por ejemplo cuando me cuesta mucho escribir un test, es porque me faltan piezas en el diseño, porque el área que estoy explorando todavía no es la más adecuada, porque estoy introduciendo demasiada complejidad.... lo tomo como una pista para replantearme el camino elegido. Y acompañado además por los micro-commits, puedo volver atrás en cualquier momento y tomar otro camino de la solución.&lt;/p&gt;
&lt;p&gt;JB Rainsberger &lt;a href=&quot;http://blog.thecodewhisperer.com/permalink/jmock-v-mockito-but-not-to-the-death&quot;&gt;dice por ejemplo&lt;/a&gt; que cuando hace TDD prefiere usar mocks en lugar de spies, porque los dolores a la hora de usar dobles son mas evidentes y eso le da más pistas sobre su diseño (ver los comentarios del post).&lt;/p&gt;
&lt;p&gt;Con TDD no me atasco, el avance es constante, me permite entrar en &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Flow_(psychology)&quot;&gt;flow&lt;/a&gt;&lt;/strong&gt;. &lt;strong&gt;No tengo que depurar!&lt;/strong&gt; practicamente nunca tengo que depurar y cuando esto sucede es otra pista de que he dado un paso demasiado grande a la hora de descomponer el problema o de que necesito descansar porque hay un &lt;em&gt;typo&lt;/em&gt; muy chorra que no consigo encontrar.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No vale para todo:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hay muchísimas situaciones en las que no hago TDD, por ejemplo cuando estudio una nueva tecnología o API de un tercero. Todo gira en torno al feedback, la simplicidad y la cadencia. Cuando voy a poderle sacar partido lo uso y cuando no, pues no lo uso. Igual que ocurre con cualquier herramienta de las que tenemos disponibles. A veces al introducir una pequeña funcionalidad en un código existente o al hacer un pequeño cambio, consigo ir más rápido escribiendo el código primero, probando a mano la aplicación y después dejando un test automático de respaldo. Sucede tipicamente en sistemas legacy donde los tests tardan mucho en ejecutarse o es tan dificil de añadir un test que valido la hipótesis primero probando a mano y luego ya agregando el test.&lt;/p&gt;
&lt;p&gt;Y tu que también practicas TDD, ayúdame a recordar más beneficios, deja un comentario please ;-)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
          <pubDate>2016-10-07T10:04:16+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/10/lo-que-me-aporta-tdd</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/10/lo-que-me-aporta-tdd</guid>
        </item>
      
    
      
        <item>
          <title>Estuvimos en la Tarugoconf</title>
          <description>&lt;h3&gt;¿Qué es la Tarugoconf?&lt;/h3&gt;
&lt;p&gt;El viernes pasado, 16 de septiembre de 2016, asistí como orgulloso representante de Codesai, al&lt;strong&gt; mejor evento posible que cupiese en la imaginación de &lt;a href=&quot;https://twitter.com/david_bonilla&quot; target=&quot;_blank&quot;&gt;David Bonilla&lt;/a&gt;: la &lt;a href=&quot;http://www.tarugoconf.com/&quot; target=&quot;_blank&quot;&gt;Tarugoconf&lt;/a&gt;.&lt;/strong&gt; Un evento que nunca hubiese existido si no le hubiesen dicho las tres palabras mágicas &quot;No hay huevos&quot; y que se construye bajo las siguientes premisas: Utilidad, Practicidad, Diversión y Calité.&lt;/p&gt;
&lt;p&gt;Citando la web:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;¿Qué carallo es esto?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sólo 100 entradas a la venta. 1 sólo día, 1 sólo track y 1 sólo objetivo: crear el evento sobre construcción y comercialización de Productos Digitales más awesómico y gallego del mundo. Lleno de ponentes con muchos tiros pegaos en las barricadas del mundillo tecnológico y que, en sus charlas, intentarán responder una simple pregunta:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;¿Qué cambiaría si pudiera volver 2 años atrás?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3&gt;El previo&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/invitaciontarugoconf.png&quot; alt=&quot;Invitacion Tarugoconf&quot; width=&quot;460&quot; height=&quot;350&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;Cuando presentó el evento por primera vez e informó que &lt;strong&gt;las entradas iban a ser por invitación&lt;/strong&gt;, sabía que no iba a sentar bien y así fue. Escuché muchos comentarios y ninguno bueno; al que no le parecía innecesariamente exclusivo (como sinónimo de excluyente), le parecía que iba a ser carne delicatessen para trolls. Como reflexión David ya comentó, que para siguientes sólo una parte sería bajo invitación y el resto abierto a todo el mundo que quisiera venir.&lt;br /&gt;
A mi me parece un sistema tan bueno como cualquiera. Se quedó gente fuera, que hubiese pasado igual y en esta conferencia el tamaño sí importaba.&lt;/p&gt;
&lt;p&gt;Ah! ¡Y el evento era dos días! Organizaron para el sábado una día de 'networking family friendly' realmente prometedor. No lo disfruté, será para la próxima.&lt;/p&gt;
&lt;h3&gt;El evento&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/FPHFVqoWJgPgwJ89UdAa0TCAlbWvW1KBBG1ZLo4_a5ACi-nu862gW3cBA56rPUjpYEf6l2IjHR8GR7As_5TuhRuBmni-wOfT3vndMYUwAfjwDiEulvhEpqxzJDpNRJ-bkpJdo1XTD9rbdaccsLpMt9a0CBUTV3gHeZ7xdqkQZyB6_v5aCKl_2ZHMrRiT3vMqdFZWxFBiwmfzNyo_jjhQYbQO2dHx3Ld1QHT6dikIsx_U1bRI77hEBXi4Cr_od1Purrg86ykKSUAu9ORlIM3EMI1bXjjhzZqmi1UVh7D1agaUldU9hBsmiy6KnxS_LERwN7i1NKWIxx6g0XQ5VkRoUR86UKy99Nc1gcKQLScuU1mexvG7YQQpakFz8YGWv1FHBu7SvKCFGgOcr-6FuYLbT2zI1BitPkjzb7g7g97809P7qZOLTOl-Ukl6KAVIDTu3Jf82tdLhBet_Cgj9Y3uDpJMQayNBCP-K3uEjWpZFJsik7N0VfdhgTeZZjnoT2RnciNKE_xHNVoeTl26oJ-2YZHxwG7lqLG0j-88xZGnvJt3PTSm1Nj-MNwago-TBjD0sHmxOJNVuDL1rIhwc6W8ktPJMkGQBZlP2nf-77GHFlexELB_dyg=w1251-h938-no&quot; alt=&quot;Benvidos a la Tarugoconf!&quot; width=&quot;600&quot; height=&quot;450&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;Y llegó el gran día. Registro y café con bollos con un ambiente algo festivo. Había gente de todo el ecosistema: desarrollo, coaching, empresa, StartUps, ... caras conocidas y no tanto que invitaban a saludarse. Había conexión.&lt;/p&gt;
&lt;p&gt;Inaugura David con una minikeynote de 15 minutos en las que nos presenta la agenda, cosas prácticas como &lt;strong&gt;dónde estará la pulpeira&lt;/strong&gt;, cómo ir a la fiesta por la noche y lo más importante, la motivación de la conferencia y por qué estamos aquí hoy. Fue un momento con un montón de energía que nos ponía en situación de lo que iba a venir.&lt;/p&gt;
&lt;p&gt;Para hacer el resumen siguiente me voy a fijar en &lt;a href=&quot;https://goo.gl/photos/Z1e53MuCXuv3cshT6&quot;&gt;mis notas&lt;/a&gt; hechas con dibujitos. También podéis ver &lt;a href=&quot;https://goo.gl/photos/A31X4868VKaCPQ8o9&quot;&gt;el trabajo de Javier (@oyabun) haciendo el Live recording&lt;/a&gt; del evento.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comienza &lt;a href=&quot;http://twitter.com/JaviSantana&quot; target=&quot;_blank&quot;&gt;Javi Santana&lt;/a&gt;, CTO de &lt;a href=&quot;https://twitter.com/CARTO&quot; target=&quot;_blank&quot;&gt;Carto&lt;/a&gt;&lt;/strong&gt; con &quot;Crear software para empresacas que manejan pasta de verdad&quot;.&lt;br /&gt;
La idea principal que transmite es que si quieres &quot;gallina&quot; hay que ir a por la empresa, a instalar &quot;on premise&quot;. El cloud, la solución SAAS tiene un rendimiento muy bajo. Luego tienes que montar un super-equipo: Soluciones (Ninjas), Sales, Soporte (aka psicólogos). Refuerza algo que ya sabemos, que no hay que parar de investigar, si paras te mueres. Y termina con un mensaje, que &lt;strong&gt;el dinero mola, pero divertirse más.&lt;/strong&gt;&lt;br /&gt;
Me gustó mucho, divertida, bien estructurada y conceptos claros.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/CDI7bGxyIlstiRvszswcpudDdVSqNU478S5r7pXcscjxxn4GU0JbN8aHgH_YgIQ1l1_FokzFFBZ3qxFjfFVGjYHjudgLQMCbJt3Gyc9_WEKeVz--wiUBhoxR8I-7rchEyTnBlEKODBQKusGU2RVgn54EukOWqKYH3kn7EuW8X1MPHq0UsicmVghDeLdpCRhe-XoT7al-Jdw0eyHUrFEdz3fqcEm2bn2dFZeBC5Pqg1frzmUp8UGpC_fBK7iOYdLx5l8bTRKJhrGfbwhY9gVvi_r5ssRG3gF8aK2NHMeiMDrDOds2jeLBk1K1Y8Ly9J7yxEnD-71B5xo_vjO6Slcbx9B7gdy3x6gElkFa1g1BPM8-nmJ8CLoZROPPBKyDoomvWrIb8ZZ-RRQZgEGVYgx1Ki1UkyXZF75kqzM3o1ZxZAT8fXFoeMW_KOd8daWDBAbO0F9gqQSls5z-ht-d71TeikHd7ThkaRjhp3FoOWliNSTylubOWONIUMbNJA1AJEda4-7QKZ_b9Zc9WWxOx37c_owI8mVBtMnYkLYeXcou8iTEemrpfRlM97fd-x7Q0qB3KkykGJ2rQ-XJjUnMlHhk9c5hfDFTXonehYy7N77VcN3rYsao3Q=s938-no&quot; alt=&quot;Quest y regalinos&quot; width=&quot;551&quot; height=&quot;551&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;A continuación le toca a&lt;strong&gt; &lt;a href=&quot;https://twitter.com/jorge__galindo&quot; target=&quot;_blank&quot;&gt;Jorge Galindo&lt;/a&gt;, Product Manager de &lt;a href=&quot;https://twitter.com/47deg&quot; target=&quot;_blank&quot;&gt;47 Degrees&lt;/a&gt;,&lt;/strong&gt; una empresa que hace software para todo el mundo desde sus oficinas al lado de la Peña Camarón, en Puerto de Santa María, Cádiz, con un par. Su charla se tituló &quot;Emprender en provincias&quot;.&lt;br /&gt;
Nos contó la historia de cómo llego 47 Degrees (latitud de Seattle) a Cádiz. Como pasó la empresa por lo estados de &quot;mundo de piruleta&quot;, &quot;hecatombe mundial&quot; y a quedarse sin pasta. Desde Cádiz se tuvo que reinventar empezando en corto, consiguió llegar a empresas de Madrid tirando de networking y les fue muy bien (por aquí pasó muy rápido, me hubiese gustado saber un poco más de este éxito). Pero entraron en un bucle de mucho curro y poca pasta que les obligó a fijar un punto de no retorno en el tiempo en el que buscarían otra cosa.&lt;br /&gt;
Estando &lt;a href=&quot;https://twitter.com/raulraja&quot; target=&quot;_blank&quot;&gt;Raúl Raja&lt;/a&gt; de vacaciones en Cartagena, leyó un artículo sobre Scala, llamó inmediatamente a Jorge para decirle que &lt;strong&gt;tenían que cambiar a Scala ya.&lt;/strong&gt; Y él le respondió: &lt;strong&gt;&quot;¡Del tirón!... ¿Cómo dices que se escribe?&quot;&lt;/strong&gt;. Aparte de la broma encontraron un nicho en la programación funcional que a base de investigar, mucho open source y atraer talento, les salvó el c... ¡Hicieron hasta un framework!&lt;br /&gt;
¿Qué cambiaría Jorge? Detalles, porque estás donde estás gracias a todas las experiencias. La pregunta que te tienes que hacer es si te gusta lo que eres y lo que estás haciendo.&lt;/p&gt;
&lt;p&gt;Alguna idea: Todos los viernes mandan un correo a todo el mundo con información de en qué proyectos están y a menudo organizan actividades para todo el mundo.&lt;br /&gt;
Les preocupa crecer por encima de 30, por si se pierde la &quot;magia&quot; (palabras literales), tema que me suena bastante.&lt;br /&gt;
Charla muy potente, con buen ritmo. Quizás en la historia hay algún hueco que creo que se podría profundizar porque daría claves de cómo emprender desde fuera de Madrid, algo muy interesante para Codesai, sin duda.&lt;/p&gt;
&lt;p&gt;Antes del café una minicharla de IBM, en la que muestra la arquitectura de Cloud e IoT que hay detrás de mover un BB-8. Un toque geek molón rápido y a la yugular.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/pDsHgyxHihI5_FSvN8cRnIngENCDaOpFKsFmHH7XnQYMO7Q06Up9SnLP1D2y3esX19vjDYJ84j20_fDxEJ6TODeZ9TB1RybOEF-ngSJwv8Komulfn6pL77mnM-MXjFo5TU_C3LLs2SchdmmgRYFEBtYVVj8ohhtp7wZ-FUfvtNmyxyUZRV6uWhnKj7-bEhkOGsMczWpVVQipvNmAhrILqF2Im4UHV1Hs318XR1cgpQoFXD1nWV0_zGxUIHPIKiSDRoT8cQJmOSrE3QuqUzoNk9QaXqkUDfAOCqcTTZyxwedVZQsi7-XYlDOvZopMNTQ1z76Lao6CNwYEDLHuddR-05J77OryRAHFKTr4-bzURR39elALOCc39MeqPmWAg-xcboOfvgyh_4UPRH1A1jfqQ75Vhu0_YiOu8s3rUc0xTL6in2QVmVDyrAGGwYl0PyWY-K8MyWlvr1ODYT8cNlVVAIQwzR4lC1d4qqHPD0NiV2mty7rVVuixZzL_M0LC9BXfw6L8-Njn2yak-pTn-BJQ11EFQBuwv8y2dtQ95wDZhA2tHlMm3XfUbGjoj9PqtKC6hKQ8nOUg6Bvc9JF-j_3Muohxj59Qg2wSVLwZ7QM4AgB-j21aHA=s938-no&quot; alt=&quot;Ponentes de la mañana&quot; width=&quot;550&quot; height=&quot;550&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;Después del café empieza &lt;a href=&quot;https://twitter.com/subidubi&quot; target=&quot;_blank&quot;&gt;Jimena Catalina&lt;/a&gt;, con la charla &quot;Sácale provecho a tu diseñador&quot; (aunque en el programa era &quot;La culpa SIEMPRE es del diseñador&quot;). &lt;strong&gt;Jimena es Diseñadora visual freelance y tiene proyectos propios&lt;/strong&gt; como &lt;a href=&quot;https://twitter.com/derechupete&quot; target=&quot;_blank&quot;&gt;Recetas de Rechupete&lt;/a&gt;. Me gustó escuchar a alguien más pegado al proceso de desarrollo que veo día a día.&lt;br /&gt;
Nos explica que es fundamental que el diseñador entienda el proceso de negocio. Hay que trabajar muy cerca del equipo, porque no sólo es diseñarlo, es colaborar en lo que luego hacen con él.&lt;br /&gt;
Destaca la importancia de un buen feedback, e intentar hablar del concreto, o qué se quiere conseguir, no de emociones.&lt;br /&gt;
&lt;strong&gt; La mejor frase: &quot;Diseño NO es arte, no expresamos nuestras emociones. Somos artesanos al servicio, resolvemos necesidades&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;El toque de inversor potente vino a cargo de&lt;strong&gt; &lt;a href=&quot;https://twitter.com/jjmata&quot; target=&quot;_blank&quot;&gt;Juanjo Mata&lt;/a&gt;. Español en los USA desde hace 25 años&lt;/strong&gt; con un acento para pronunciar el inglés que cuando lo oyes piensas: &quot;A este seguro que le entienden&quot;. David dice que es gallego, pero Juanjo mencionaba mucho a Toledo, no se porqué. En su twitter dice que es COO en Teambox.&lt;br /&gt;
&quot;Si quieres vender necesitas un VP de Ventas&quot; y nos mostró una tabla de sueldos mareantes, todos con seis cifras. Comentó que en USA dan dinero por un 5% y te dejan trabajar y que en España siempre quieren influenciar en el negocio. Y expresó con impotencia que es muy difícil montar allí un equipo tecnológico estable, hay tanta oferta que se van a los dos días, lo que es un problema para conseguir ritmo.&lt;br /&gt;
Fue una charla muy técnica, llena de siglas que no recuerdo y&lt;strong&gt; me enteré de muy poco, cosa que me hizo preguntarle: &quot;Como técnico que ayuda a Startups, ¿debería aprender más de inversión, en vez del siguiente framework?&quot;.&lt;/strong&gt; Su respuesta fue que solamente si quieres, aunque alguien tiene que saber de todo esto en la empresa.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ya oliendo el pulpo vino Molpe&lt;/strong&gt; (&lt;a href=&quot;https://twitter.com/molpe&quot; target=&quot;_blank&quot;&gt;Alberto Molpeceres&lt;/a&gt;), que se ha especializado en que tu negocio pueda cobrar online, con su charla que en la agenda venía como &quot;Lo que diga Molpe&quot; y que él renombró&lt;strong&gt; &quot;Family Business&quot;.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt; Nos dejó a todos destrozados.&lt;/strong&gt; &lt;strong&gt;Una reflexión muy profunda de lo que significa (¡y lo que cuesta!) conciliar de verdad.&lt;/strong&gt;&lt;br /&gt;
Cinco puntos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Distingue trabajo de hogar, que no te vean todo el día al ordenador.&lt;/li&gt;
&lt;li&gt;Agenda compartida, respeta los huecos comunes, no pongas la empresa como excusa.&lt;/li&gt;
&lt;li&gt;Las distancias importan.&lt;/li&gt;
&lt;li&gt;Todos o ninguno, intenta que los eventos sean un viaje familiar.&lt;/li&gt;
&lt;li&gt;Todo el mundo juega un rol. Involucra a todo el mundo en tu trabajo, en tus éxitos, en tus preocupaciones.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El turno de preguntas &lt;strong&gt;convirtió la sala en una terapia de padres y madres&lt;/strong&gt; expresando sus problemas en el día a día en un nuevo escenario para muchos.&lt;br /&gt;
No se si fue la mejor charla, pero sí la que más voy a recordar. Por lo inesperado del tema y lo bien tratado. Me llevo un montón de ideas para implementar en casa.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;La comida tremenda.&lt;/strong&gt; La cantidad de pulpo, empanada, tortilla que me pude comer, sólo se queda pequeña comparada con la que desearía haber comido. Muy buen lugar, en un solar al lado del Campus, y muy buen ambiente para seguir saludando a los que todavía no habíamos podido.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/29727990461_4f2a70fa63_z_d.jpg&quot; alt=&quot;Zona de la comida&quot; width=&quot;640&quot; height=&quot;427&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;Después de comer &lt;strong&gt;&lt;a href=&quot;https://twitter.com/cuquiesp&quot; target=&quot;_blank&quot;&gt;Inés Luna&lt;/a&gt;, experta en atención al cliente&lt;/strong&gt; con la charla &quot;Usuarios, clientes y animales ¿Son todos iguales?&quot;&lt;br /&gt;
Se centró en lo importante que es tener un buen equipo de soporte, que además esté muy en contacto con producto, tanto para saber cuándo salen las siguientes funcionalidades, cuando se resolverán ciertos errores o para dar ideas.&lt;/p&gt;
&lt;p&gt;A continuación &lt;strong&gt;&lt;a href=&quot;https://twitter.com/diegomarino&quot; target=&quot;_blank&quot;&gt;Diego Mariño&lt;/a&gt; con &quot;Así crearía Ducksboard en 2016&quot;. Diego fue fundador de &lt;a href=&quot;https://twitter.com/ducksboard&quot; target=&quot;_blank&quot;&gt;Ducksboard&lt;/a&gt;, que fue adquirida por &lt;a href=&quot;https://twitter.com/newrelic&quot; target=&quot;_blank&quot;&gt;New Relic&lt;/a&gt;,&lt;/strong&gt; de la que ahora es Principal Product Manager.&lt;br /&gt;
Diego charló con el público más que una presentación. Habló de sus experiencias en Ducksboard y en USA. &lt;strong&gt;Buen ambiente vespertino.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Y para terminar subió al escenario&lt;strong&gt; &lt;a href=&quot;https://twitter.com/jemonleon&quot; target=&quot;_blank&quot;&gt;Jesús Monleón&lt;/a&gt; &lt;/strong&gt;para hablar de &quot;Cómo montar un equipo comercial para salir a vender con el cuchillo entre los dientes&quot;. Jesús es inversor en &lt;a href=&quot;https://t.co/shejETNbes&quot; target=&quot;_blank&quot;&gt;SeedRocket&lt;/a&gt; y fundador de &lt;a href=&quot;https://t.co/DWBQz8N6iw&quot; target=&quot;_blank&quot;&gt;Offerum&lt;/a&gt; entre otras, &lt;strong&gt;siempre como responsable del equipo comercial.&lt;/strong&gt;&lt;br /&gt;
Jesús nos llevó a sus inicios en eMagister con unas historias desternillantes sobre cómo se consigue vender algo.&lt;strong&gt; Entre mucho humor negro nos contó con detalle las interioridades de un equipo comercial.&lt;/strong&gt;&lt;br /&gt;
Una charla muy personal y a veces dura que puso buen broche a las ponencias del día.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/KlNvlsEWO8sOYNw0jwPYwLW_BVz--cNyM-noPFiEZ6MhQSXL4jcONRrUSR-yojhqKJkXpBlBa2BFt6om7VQpj8xZ8ECiEVLgM8XV4JVQQQnrMnwzhLvxukIJUKPcDcKlSeYaw3fgkO7bQOVK4W5OqYzJVWnaFKUpdBFK_hX00XZI2XAYUQB0j73ElJAkNnOtS-gz2OVq6XJ2_ysADy_7pZv-zJbDhE_Yl8-fUkBxeMTcE3bTBFKqyghc96HbSVbbWaECwn5A9UsWMxUrdTiFRftGwG5-cAdLuGYI7MArxmCoJyaBoGDrqyuSs5KpJNpcwY0ytrn_b82Me6lK_74cCB4fs94-oMUX3MD25S9e7sqUz573JwPpVBQG4Z28evzUiQx8B-iHs808p589zCAr4YbQCXZ8b5zvC3L__usbDJfEiD8Jh95KuCE1b6SwQYk8uem9LA8DaCvFNeJuVX9I9hLB5qGugT0EbyaNeUof5771GXjLQr9QvdcxAcEZN_OdY_NmmDIlODcnrI2xb7WeSN8EFKumNheCOiAV1LTpi9bun2yZUUm5pRecpLbTcX7LVHLhEecFysFvH1wz_baAt0yx9uywQA6QLa-HI1G_ompwyTlHjg=s902-no&quot; alt=&quot;Ponentes de la tarde&quot; width=&quot;551&quot; height=&quot;551&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;Y después del zumo terminamos con la &lt;strong&gt;Mesa Redonda de Medios Digitales&lt;/strong&gt;: &quot;la vida más allá de la publicidad y el CPM&quot;&lt;br /&gt;
Conversación claramente para iniciados en el mundo del contenido y lo que significa ganar dinero con gente que viene a verte sin tener que cobrarles. En general estaban bastante alineados.&lt;/p&gt;
&lt;h3&gt;Despedida&lt;/h3&gt;
&lt;p&gt;¡Y va terminando el evento!&lt;br /&gt;
Bonilla se sube a la palestra y nos cuenta los datos internos económicos de la Tarugoconf. El resultado sale positivo, pero nos aclara que es porque no ha tenido que pagar por varias cosas: como la sala (gracias a Campus Madrid), la web del evento (gracias a Space Nomads) y algo tan increíble como &lt;strong&gt;los vuelos de Juanjo Mata y Diego Mariño desde EEUU, ¡que se los pagaron ellos mismos!&lt;/strong&gt; Así que si contase con todos esos gastos el evento perdería mucho dinero.&lt;/p&gt;
&lt;p&gt;A continuación da las gracias especialmente a &lt;a href=&quot;https://twitter.com/candelamd&quot;&gt;Candela&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ydarias&quot;&gt;Yerai&lt;/a&gt; y &lt;a href=&quot;&amp;quot;https://twitter.com/jerolba&quot;&gt;Jero&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/bM0meM_Zyio22cEmD-IKISt3S4iicAcx_rEQ_QczpzkdtDV3WAo6zf7P1HT3ZAEmgnU9Y3_bqY7E03fzkdsacLEf1PWKps1kmy__ZsL_6EYA7gHV_tzyNLBNRQ5N9jn-1LrveW3uZpfjiGec4q-ephCVnr-5otVMCyEfhGMzT-Dh7DqHmUHImfqpc466W-FZfEDGldbZZtbPO8bWuoPjGWXyPyjov3ny8yvHGCElWd1XAji1qgN9Y-FUcjufFBB-VMBEJ6QmSB8e5EJXvCNprjcMIU4TFJBdZfBQwsZthj7SoF5tbgFE8zPQnfjeXFiWEXtpKtoDLhdTUcm7C1KZ4NOfDng6UHjtLE9wfkF0MN_u6G2SkVBhVIS2hm_KPxpTbP5lQ-Re9cEanWah55PwOYY8ga9C_g25OqLLQ7gxKAvKh6IelGSIbyjKyAbF9vQ-LLNekIGnkCYPWV88NmhofxhhYlbXmxmtzzMUh74VdsdozLZDO8yzv4HTKaUcDa7h25YxkhQ3RVp7dPrp8vrfglVIe4mkssx3zNWRCNhBJ_4YLY5mVTLca9wsfNF6JNa4C6PGqo2ux-MYPak6xjUCZavfTeJOPtZtoHnaupCqooA4ppYNcQ=w1251-h938-no&quot; alt=&quot;David dando las gracias al final&quot; width=&quot;601&quot; height=&quot;451&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;Nos comparte la certeza de que los eventos &quot;de autor&quot; son el futuro: Línea editorial, Experiencia, Networking y conseguir Leads valiosos, por encima de un CFP genérico y hacer branding personal.&lt;/p&gt;
&lt;p&gt;Sobre si habrá Tarugoconf 2017, dice ahora mismo no le apetece,  pero que sabe que alguien pronunciará las tres palabras mágicas... así que se despidió &lt;strong&gt;&quot;¡Hasta el año que viene!&quot;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Bola extra&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/oyabun&quot; target=&quot;_blank&quot;&gt;Javier Alonso (@oyabun)&lt;/a&gt; hizo un trabajo magistral, haciendo el 'Graphic Recording' de todo el evento. Impresionó a todo el mundo. ¡Gracias y Enhorabuena!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/oyabun/status/776842954606542849&quot;&gt;&lt;img class=&quot;wp-image-3013 alignnone&quot; src=&quot;/assets/graphicrecording.png&quot; alt=&quot;graphicrecording&quot; width=&quot;610&quot; height=&quot;406&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Feedback&lt;/h3&gt;
&lt;p&gt;Me acaba de llegar un correo en el que David nos pide feedback, lo dejo por aquí también:&lt;/p&gt;
&lt;p&gt;Para repetir:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tiempo para preguntas. 30 minutos de charla y 15 de preguntas.&lt;/li&gt;
&lt;li&gt;El buen ambiente entre los asistentes, cada charla fantástica.&lt;/li&gt;
&lt;li&gt;La tortilla caliente y poco cuajada.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para mejorar en la siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un pequeño break entre charlas. Cinco minutos para despejar la mente.&lt;/li&gt;
&lt;li&gt;La promesa de salir del evento con 10 contactos hiper-curated creo que no se cumplió. Seguro que no lo di todo conociendo gente, pero creo que si uno de los objetivos era ese habría que intentar alguna idea más para el año que viene.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;En resumen&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Muy potente, mucha energía, un ambiente espectacular&lt;/strong&gt; donde podías encontrar a un montón de compañeros y a los que no conocías sabías que iban a ser igual de interesantes; un conjunto de ponentes muy cuidado, con una presentación robusta  y &lt;strong&gt;con mensajes e ideas claras.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Una gran oportunidad para poder aprender de gente que se ha pegado muy duro y con ideas para llevar para aplicar desde ya.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/adelatorrefoss/status/777189741913669632&quot;&gt;&lt;img class=&quot;wp-image-3011 alignnone&quot; src=&quot;/assets/llegada.png&quot; alt=&quot;llegada&quot; width=&quot;552&quot; height=&quot;487&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Fotos&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://goo.gl/photos/A31X4868VKaCPQ8o9&quot;&gt;Live Sketching de Javier (@oyabun)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://goo.gl/photos/Z1e53MuCXuv3cshT6&quot;&gt;Mis notas #sketchnoting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://bit.ly/tarugopics16&quot;&gt;Fotos oficiales de la Tarugoconf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://goo.gl/photos/KmgmH1qtYUBaBNmP9&quot;&gt;Mis fotos&lt;/a&gt;&lt;/p&gt;
</description>
          <pubDate>2016-09-23T08:05:17+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/09/estuvimos-en-la-tarugoconf</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/09/estuvimos-en-la-tarugoconf</guid>
        </item>
      
    
      
        <item>
          <title>Recorriendo poco a poco el libro “Understanding the 4 rules of simple design”</title>
          <description>&lt;h1&gt;Kata del Juego de la Vida de Conway&lt;/h1&gt;
&lt;p&gt;En mis primeras semanas en &lt;a href=&quot;http://www.codesai.com&quot;&gt;Codesai &lt;/a&gt;he hecho la kata del &lt;a href=&quot;https://es.wikipedia.org/wiki/Juego_de_la_vida&quot;&gt;Juego de la Vida de Conway&lt;/a&gt; como parte de mi formación para empaparme de la cultura y valores de la empresa.&lt;/p&gt;
&lt;p&gt;La hice dos veces: la primera ha sido &lt;a href=&quot;https://github.com/adelatorrefoss/kata-tdd-game-of-life-inside-out-js&quot;&gt;TDD inside-out en Javascript&lt;/a&gt; con Karma, Mocha y Chai, y la segunda &lt;a href=&quot;https://github.com/adelatorrefoss/kata-game-of-life-groovy-outside-in&quot;&gt;TDD outside-in con Groovy&lt;/a&gt; y Spock. Dejo aquí mis enlaces al github donde se ve en cada commit qué decisiones he ido tomando siguiendo el ciclo: ROJO -&amp;gt; VERDE -&amp;gt; REFACTOR.&lt;/p&gt;
&lt;p&gt;Para ver una buena explicación de las diferencias de hacer TDD inside-out e outside-in, podéis leer este post: &lt;a href=&quot;https://www.adictosaltrabajo.com/tutoriales/tdd-outside-in-vs-inside-out/&quot;&gt;TDD: Outside-In vs Inside-Out&lt;/a&gt; en el fantástico &lt;a href=&quot;https://www.adictosaltrabajo.com/&quot;&gt;blog de Adictos al Trabajo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Después de hacer estas dos katas, he leído el libro &lt;a href=&quot;https://www.goodreads.com/book/show/21841698-understanding-the-four-rules-of-simple-design&quot;&gt;“Understanding the 4 rules of simple design”&lt;/a&gt; y he comparado mis decisiones.&lt;br /&gt;
Lo que viene a continuación no es un resumen, son comentarios de lo que más me ha llamado la atención, así que te recomiendo leer el libro antes de seguir. Es corto, en un día lo tienes hecho.&lt;/p&gt;
&lt;h1&gt;Resumen y comentarios del libro “Understanding the 4 rules of simple design”&lt;/h1&gt;
&lt;p&gt;El libro empieza muy fuerte, con los prólogos de Kent Beck y J. B. Rainsberger de los que se sacan auténticas perlas:&lt;/p&gt;
&lt;h2&gt;Foreword from Kent Beck&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;i&gt;Is wrong “Design for the future. Change is expensive. Make it cheap by anticipating it.”&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;This looked like a positive feedback loop to me: more speculation -&amp;gt; worse design -&amp;gt; more speculation.&lt;br /&gt;
The good news about disastrous positive feedback loops is that you can generally drive them backwards&lt;b&gt;&lt;i&gt;. I first experimented by ignoring any changes that seemed like they would happen longer than six month in the future. My designs were simpler, I started making progress sooner, and I stressed less about the unknowable future. I shortened the time horizon to three months. More better.&lt;br /&gt;
One month. More. A week. A day. Oh, hell, what happens if I don’t add any design elements&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Es muy gráfico cómo relata una especie de evolución de su pensamiento sobre qué pasaría si no adelantamos nada de supuestos futuros.&lt;/p&gt;
&lt;p&gt;Buceando un poco desde el enlace que da en el prólogo, llegué a un &lt;a href=&quot;http://martinfowler.com/bliki/BeckDesignRules.html&quot;&gt;artículo de Martin Fowler&lt;/a&gt; sobre estas reglas de diseño donde pone la siguiente cita de Kent Beck:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;i&gt;At the time there was a lot of “design is subjective”, “design is a matter of taste” bullshit going around&lt;/i&gt;&lt;b&gt;&lt;i&gt;. &lt;/i&gt;&lt;/b&gt;&lt;i&gt;I disagreed. There are better and worse designs. &lt;/i&gt;&lt;b&gt;&lt;i&gt;These criteria &lt;/i&gt;&lt;/b&gt;&lt;i&gt;aren’t perfect, but they&lt;/i&gt;&lt;b&gt;&lt;i&gt; serve to sort out some of the obvious crap and (importantly) you can evaluate them right now. &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;i&gt;The real criteria &lt;/i&gt;&lt;/b&gt;&lt;i&gt;for quality of design, “minimizes cost (including the cost of delay) and maximizes benefit over the lifetime of the software,” can &lt;/i&gt;&lt;b&gt;&lt;i&gt;only be evaluated post hoc&lt;/i&gt;&lt;/b&gt;&lt;i&gt;, and even then any evaluation will be subject to a large bag full of cognitive biases.&lt;/i&gt;&lt;b&gt;&lt;i&gt; The four rules are generally predictive.&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;-- Kent Beck&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Creo que define muy bien lo que significan las buenas prácticas: &lt;i&gt;Estos criterios no son perfectos, pero sirven para detectar algo de la basura más obvia y (lo más importante) puedes evaluarlo inmediatamente.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;En un entorno de trabajo donde cualquier decisión es cuestionable, tener reglas básicas para distinguir el &lt;/b&gt;&lt;b&gt;&lt;i&gt;‘crap-code’&lt;/i&gt;&lt;/b&gt;&lt;b&gt; ayuda mucho a las conversaciones dentro del equipo&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;Foreword from J. B. Reinsberger&lt;/h2&gt;
&lt;p&gt;El siguiente prólogo está realmente bien. Pues ayuda a profundizar y hacerte una idea de las conversaciones que puede haber detrás de algo aparentemente tan sencillo como las cuatro reglas.&lt;/p&gt;
&lt;p&gt;Destaco como antes, no textos del prólogo, sino de los posts relacionados de JB. Son mencionados en numerosas ocasiones por todos los autores vistos hasta ahora y se recomiendan incluso por Corey Haines en el propio libro.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://blog.jbrains.ca/permalink/the-four-elements-of-simple-design&quot;&gt;&lt;i&gt;The four elements of simple design&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;When I find fifteen lines of duplicate code, I start by extracting them to a new method, and &lt;/i&gt;&lt;b&gt;&lt;i&gt;since I probably don’t yet know what those lines of code do yet, I name the new method foo()&lt;/i&gt;&lt;/b&gt;&lt;i&gt;. After around 15 minutes of working in the same area, I begin to understand what this method does, so I give it an accurate name, such as computeCost().&lt;br /&gt;
[...]&lt;br /&gt;
&lt;/i&gt;&lt;b&gt;&lt;i&gt;That leaves me with two key elements of simple design: remove duplication and fix bad names&lt;/i&gt;&lt;/b&gt;&lt;i&gt;. When I remove duplication, I tend to see an appropriate structure emerge, and when I fix bad names, I tend to see responsibilities slide into appropriate parts of the design.&lt;br /&gt;
[...]&lt;br /&gt;
I claim that developing strong skills of detecting duplication, removing duplication, identifying naming problems, and fixing naming problems &lt;/i&gt;&lt;b&gt;&lt;i&gt;equates to learning everything ever written about object-oriented design.&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Este post es &lt;strong&gt;oro puro&lt;/strong&gt;, el primer párrafo me encanta, pues dar nombres a métodos o clases, es la tarea más difícil del desarrollo. Aquí da una pista muy buena.&lt;/p&gt;
&lt;p&gt;El siguiente post relacionado de JB, es la continuación del anterior, e intenta cerrar la ‘guerra’ abierta sobre el orden de importancia de las cuatro reglas.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://blog.thecodewhisperer.com/permalink/putting-an-age-old-battle-to-rest/&quot;&gt;&lt;i&gt;Putting an age old battle to rest&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;i&gt;I don’t think it matters whether you focus first on removing duplication or on revealing intent/increasing clarity, because these two guidelines very quickly form a rapid, tight feedback cycle.&lt;/i&gt;&lt;/b&gt;&lt;i&gt; By the time the guidelines guide you to any useful results, you’ll have probably used them both. Therefore, order the rules however you like, because you’ll get to the same place either way.&lt;br /&gt;
...&lt;br /&gt;
When we remove duplication, we create buckets; when we improve names, we create &lt;/i&gt;&lt;b&gt;&lt;i&gt;more cohesive&lt;/i&gt;&lt;/b&gt;&lt;i&gt;, more easily-abstracted buckets.&lt;br /&gt;
...&lt;br /&gt;
Now, I think of them as a &lt;/i&gt;&lt;b&gt;&lt;i&gt;single guideline: remove duplication and improve names in small cycles.&lt;/i&gt;&lt;/b&gt;&lt;i&gt; When I do this, I produce a higher proportion of  well-factored code compared to all the code I write.&lt;br /&gt;
...&lt;br /&gt;
Removing duplication and improving names helps me reduce the liability (cost) of the code that I write. &lt;/i&gt;&lt;b&gt;&lt;i&gt;Together, they help me reduce both the total cost&lt;/i&gt;&lt;/b&gt;&lt;i&gt; and the volatility of the cost of the features I deliver.&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;En estos tres párrafos habla de tres temas muy potentes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cerrar la guerra sobre el orden&lt;/li&gt;
&lt;li&gt;Cohesión&lt;/li&gt;
&lt;li&gt;Coste&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Introduction: This book&lt;/h2&gt;
&lt;p&gt;Me encanta esta introducción. Habla con más claridad de lo que hemos visto hasta ahora: cómo las cuatro reglas se retroalimentan, incidiendo en lo comentado por JB.&lt;/p&gt;
&lt;p&gt;Recalca como Kent Beck que no ve que haya diseños buenos y malos, e incluso que puede haber varios buenos diseños. A partir de ahí, comparándolos se podría llegar a un consenso de las ideas fundamentales de por qué un diseño es &quot;mejor&quot; que otro.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;i&gt;If we can look at things from a comparison point of view, perhaps we can find some fundamental ideas about “better”.&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Termina formulando las dos constantes en el desarrollo de software, acompañado de un tweet de &lt;a href=&quot;https://twitter.com/sandimetz&quot;&gt;Sandi Metz&lt;/a&gt;: &lt;b&gt;“Habrá cambios pero no sabemos qué es lo que va a cambiar”&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;p&gt;A continuación entramos en materia del libro con diferentes ejemplos divididos en capítulos (respeto los títulos en inglés), como si fuéramos construyendo desde cero el Juego de la Vida.&lt;/p&gt;
&lt;h3&gt;Test Names Should Influence Object’s API&lt;/h3&gt;
&lt;pre&gt;// Test: Check world is empty
// NO
world.cell_alive_at(1,1)?
// YES
world.empty?&lt;/pre&gt;
&lt;p&gt;Hay que usar nombres de test de hablen de negocio, y construir un API apropiada. Si usamos nombres de test orientados a datos, corremos el riesgo de construir un código que expone información que no es responsabilidad de la clase. &lt;/p&gt;
&lt;h3&gt;Duplication of Knowledge about Topology&lt;/h3&gt;
&lt;pre&gt;class LivingCell
    attr_reader :location
end class
&lt;/pre&gt;
&lt;p&gt;Aquí, Corey Hanes propone poner la localización dentro de la celdas, para no duplicar el conocimiento acerca de la topología del sistema, como en el código visto antes. &lt;/p&gt;
&lt;p&gt;Pensé en hacer esto, pero tal como estaba resolviendo el problema, no podía mover o quitar el conocimiento de la ubicación de las células fuera de la clase Grid, que está un nivel hacia afuera: lo necesitaba para recorrer la malla y calcular la siguiente iteración y para calcular el número de vecinos.&lt;/p&gt;
&lt;p&gt;Como experimento para esta kata, la estructura de datos en la que almacené las células de la malla, una estructura de dos dimensiones, fue en un tipo List, unidimensional. Y para consumirlo, desarrollé una especie de Iterable y el acceso a un elemento concreto con paginación.&lt;/p&gt;
&lt;p&gt;Así, el primero de los problemas que comento lo tenía resuelto, no se iba a recorrer la malla.&lt;/p&gt;
&lt;p&gt;El segundo problema, el de calcular el número de vecinos es el que no supe cómo resolverlo. ¿Cómo podía acceder a los vecinos de un elemento, si la posición que ocupan la tiene solo los elementos? ¿Cómo accedo a un elemento concreto de la malla?&lt;/p&gt;
&lt;p&gt;Después de terminar la kata, se me ocurrió una solución a esto. Podría haber usado métodos como .filter() sobre el List, para buscar elementos. No es muy eficiente, pero consigue lo que se quiere, abstraes la localización del Grid y se lo pasas a las células, lo probaré para la próxima.&lt;/p&gt;
&lt;h3&gt;Behavior Attractors&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;
&lt;b&gt;&lt;i&gt;Whenever we have a new method — a new behavior — an important question is “where do we put it?” What type does this belong to?&lt;/i&gt;&lt;/b&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Siempre que tenemos un nuevo comportamiento la pregunta es dónde lo ponemos.&lt;br /&gt;
En el libro recomienda no pararse demasiado a analizar dónde ubicarlo. Buscar rápidamente un sitio. Si nos encaja, perfecto; pero si no, tenemos que moverlo. Además cuanto antes para que luego con el uso no sea más difícil.&lt;/p&gt;
&lt;pre&gt;// Where do we put neighbors?
// Location seems perfect.
class Location
     attr_reader :x, :y
     &lt;strong&gt;def neighbors&lt;/strong&gt;
         # calculate a list of locations
         # that are considered neighbors
      end
 end&lt;/pre&gt;
&lt;p&gt;Destaca que a través del proceso de eliminar la duplicación de conocimiento de manera agresiva es como conseguimos clases que atraigan comportamientos. Y como corolario, si intentamos eliminar esa duplicidad y no encontramos dónde colocarlo es que nos falta alguna abstracción.&lt;/p&gt;
&lt;p&gt;En el ejemplo de código, me llamó mucho la atención poner los neighbors en Location. Porque eso significa que es un dato que se guarda, no un dato calculado al momento del tick. Interesante para explorar.&lt;/p&gt;
&lt;h3&gt;Testing State vs Testing Behavior&lt;/h3&gt;
&lt;p&gt;En este apartado habla que hay que testear el comportamiento y no el estado, y pone como ejemplo que lo primero que comprueba en la kata es:&lt;/p&gt;
&lt;pre&gt;world.empty?&lt;/pre&gt;
&lt;p&gt;Yo lo que pensé que era el primer comportamiento era algo como:&lt;/p&gt;
&lt;pre&gt;world.stable?&lt;/pre&gt;
&lt;p&gt;Es decir: &quot;¿Es el sistema estable? ¿Hay que hacer una siguiente iteración? ¿Cuál es la condición de parada?&quot;. Comentándolo con los compañeros, parece que afronté el problema desde demasiado afuera. Outside-in no quiere decir literalmente: &quot;Desde la capa más exterior, hacia dentro&quot;.&lt;/p&gt;
&lt;h3&gt;Don’t Have Tests Depend on Previous Tests&lt;/h3&gt;
&lt;pre&gt;def test_an_empty_world_stays_empty_after_a_tick
     world = World.new
     next_world = world.tick
     assert_true next_world.empty?
 end&lt;/pre&gt;
&lt;p&gt;&lt;i&gt;Rather new world is empty, let’s explicitly ask for an empty world.&lt;/i&gt;&lt;/p&gt;
&lt;pre&gt;def test_an_empty_world_stays_empty_after_a_tick
     world = World.empty
     next_world = world.tick
     assert_true next_world.empty?
 end&lt;/pre&gt;
&lt;p&gt;Si cambiamos el constructor base y devuelve otra cosa que un mundo vacío, el primer test continuará pasando. Para evitar esto, quien invoque al objeto no debería usar el constructor base con la confianza que vendrá con un estado específico, y menos en la preparación del test, debería usar un 'constructor', un 'builder', para crear un objeto con un estado concreto y válido.&lt;/p&gt;
&lt;p&gt;Esto me parece simplemente genial. Dejar de confiar en los constructores y crear builders que te den el objeto en el estado deseado. Es un problema que me encuentro de manera recurrente, no confío en los datos que tengo al preparar un test.&lt;/p&gt;
&lt;h3&gt;Breaking Abstraction Level&lt;/h3&gt;
&lt;pre&gt;def test_world_is_not_empty_after_adding_a_cell
     world = World.empty
     world.set_living_at&lt;b&gt;(Location.new(1,1))&lt;/b&gt;
     assert_false &lt;b&gt;world.empty?&lt;/b&gt;
end
&lt;/pre&gt;
&lt;p&gt;Este tests está acoplado a una capa de abstracción que no es la suya, por lo que si se cambia el sistema de coordenadas a tres dimensiones, por ejemplo, fallarán tests que no tienen nada que ver.&lt;/p&gt;
&lt;p&gt;El libro recomienda en este caso hacer un doble de test que abstraiga de ese detalle. Otra opción puede ser usar un helper que de cree ese objeto de coordenadas y así solo está definido en un sitio.&lt;/p&gt;
&lt;pre&gt;def test_world_is_not_empty_after_adding_a_cell
    world = World.empty
    world.set_living_at(Object.new)
    assert_false world.empty?
end
&lt;/pre&gt;
&lt;p&gt;Este tipo de problemas nos hacen ver todos los puntos de contacto que tienen nuestros objetos con los demás.&lt;/p&gt;
&lt;h3&gt;Naive Duplication&lt;/h3&gt;
&lt;p&gt;Muy interesante esta sección en la que veremos las diferencias entre duplicidad de código y duplicidad de lógica de negocio.&lt;/p&gt;
&lt;p&gt;Vamos a observar las condiciones para que una célula viva en la siguiente generación:&lt;/p&gt;
&lt;pre&gt;class Cell
    # ...
    def alive_in_next_generation?
        if alive
            number_of_neighbors == 2 ||
            number_of_neighbors == 3
        else
            number_of_neighbors == 3
        end
    end
end
&lt;/pre&gt;
&lt;p&gt;Podríamos refactorizar este código:&lt;/p&gt;
&lt;pre&gt;// An optimization of is_alive condition
class Cell
    # ...
    def alive_in_next_generation?
        (alive &amp;amp;&amp;amp; number_of_neighbors == 2) ||
            number_of_neighbors == 3
    end
end
&lt;/pre&gt;
&lt;p&gt;Con este refactor de código recordamos una de las cuatro reglas: &quot;El conocimiento se debe representar una y solamente una vez&quot;.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;i&gt;Every piece of knowledge has one and only one representation.&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Mirando otra vez al código original podemos ver que esos 3s no significan lo mismo.&lt;br /&gt;
Recomienda que una buena técnica para no caer en este error, sería nombrar de forma explícita los conceptos antes de refactorizar.&lt;/p&gt;
&lt;pre&gt;class Cell
    # ...
    def alive_in_next_generation?
        if alive
            stable_neighborhood?
        else
            genetically_fertile_neighborhood?
        end
    end
end&lt;/pre&gt;
&lt;p&gt;Así se ve mucho mejor y en caso de cambiar las condiciones de supervivencia, accedemos a reglas de negocio directamente.&lt;/p&gt;
&lt;p&gt;En mi código no hice refactor porque me di cuenta que no era el mismo conocimiento, pero no extraje a un método cada comportamiento, interesante apunte para la próxima.&lt;/p&gt;
&lt;h3&gt;Procedural Polymorphism&lt;/h3&gt;
&lt;p&gt;El if en el código del apartado anterior diferencia los casos comprobando el valor del estado:&lt;/p&gt;
&lt;pre&gt;if state == ALIVE
...
&lt;/pre&gt;
&lt;p&gt;En esta sección destaca que el uso de variables de estado es un indicio de que no se ha entendido el negocio. Interesante.&lt;/p&gt;
&lt;p&gt;¿Cómo resolvemos esto? Nos presenta el Polimorfismo, como una técnica que nos da la posibilidad de llamar a un único método y tener más de un posible comportamiento. Si usamos ifs para hacer estas diferencias le llama &lt;strong&gt;Procedural Polymorphism&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Cuando vi esto me vino a la cabeza que una buena razón para no tener cuerpos ifs muy grandes o complejos es que se podría romper el Principio Open/Close porque este método tiene más de una razón para cambiar. Deberían ser super-sencillos.&lt;/p&gt;
&lt;p&gt;Avanzando con el polimorfismo, la OO nos da su método preferido, el Polimorfismo basado en tipos.&lt;/p&gt;
&lt;p&gt;Así en nuestro ejemplo podemos coger el estado y trasladarlo a un par de tipos:&lt;/p&gt;
&lt;pre&gt;class LivingCell
    def alive_in_next_generation?
        # neighbor_count == 2 || neighbor_count == 3
        stable_neighborhood?
    end
end

class DeadCell
    def alive_in_next_generation?
        # neighbor_count == 3
        genetically_fertile_neighborhood?
    end
end
&lt;/pre&gt;
&lt;p&gt;¡Polimorfismo! ¡Me encanta! Me parece muy mágico y elegante.&lt;/p&gt;
&lt;p&gt;Pero Haines no lo deja ahí, no nos deja tranquilos en nuestra satisfacción. A continuación rompe el polimorfismo de este ejemplo cambiando de nombre a los métodos. ¿Por qué?&lt;/p&gt;
&lt;p&gt;La explicación que da, es que &lt;b&gt;el polimorfimo hace abstracciones muy atractivas que podrían ocultar detalles del comportamiento real&lt;/b&gt; de cada subtipo, siendo incorrecto ese genérico que queremos atribuirle.&lt;/p&gt;
&lt;p&gt;Para darnos un ejemplo, se plantea la propia existencia de la clase &lt;code&gt;DeadCell&lt;/code&gt;, pues no tendría mucho sentido si el tamaño del Grid fuera infinito.&lt;/p&gt;
&lt;p&gt;Es muy fácil, sobre todo al principio, sacar abstracciones rápidamente y hacer una jerarquía de tipos. Pero si nos damos cuenta que es incorrecta deshacerla suele ser complicado.&lt;/p&gt;
&lt;h3&gt;Making Assumptions About Usage&lt;/h3&gt;
&lt;p&gt;La idea fundamental bajo la pregunta: &quot;¿Necesitamos esta abstracción?&quot; es: &quot;El uso influencia la estructura&quot;. Propone que hay que construir nuestra lógica de negocio y las abstracciones que usemos motivadas por el uso que hagamos.&lt;/p&gt;
&lt;h3&gt;Unwrapping an Object&lt;/h3&gt;
&lt;p&gt;Partiendo de este trozo de código que muestra una solución para contar los vecinos de una célula:&lt;/p&gt;
&lt;pre&gt;class Location
    attr_reader :x, :y
end

location1 = Location.new(1, 1)
location2 = Location.new(1, 2)

if location1.equals?(location2)
    # Do something interesting
end
&lt;/pre&gt;
&lt;p&gt;Para hacer ese &quot;algo interesante&quot; tenemos que saber si las dos posiciones son iguales. Y generalmente haríamos algo como esto:&lt;/p&gt;
&lt;pre&gt;class Location
    attr_reader :x, :y
    def equals?(other_location)
        self.x == other_location.x &amp;amp;&amp;amp;
        self.y == other_location.y
    end
end

location1.equals?(location2)
&lt;/pre&gt;
&lt;p&gt;¿Qué sucedería si aplicamos en la kata la restricción (muy potente) de &quot;Nuestras funciones no pueden retornar valores&quot;?&lt;br /&gt;
Tendríamos que transformar este código para que cumpla el &lt;b&gt;'Tell, don’t ask'&lt;/b&gt; y confiar en los objetos para que hagan un trabajo que generalmente haríamos nosotros.&lt;/p&gt;
&lt;p&gt;Para ello propone una solución muy interesante, el uso de lambdas: le decimos al &lt;code&gt;.equals?&lt;/code&gt; lo que queremos que ejecute si se cumple la condición.&lt;/p&gt;
&lt;pre&gt;count_of_locations = 0
location1.equals?(location2, &lt;b&gt;-&amp;gt; { count_of_locations++ }&lt;/b&gt;)

class Location
    attr_reader :x, :y
    def equals?(other_location, &lt;b&gt;if_equal&lt;/b&gt;)
        other_location.equals_coordinate?(self.x, self.y, &lt;b&gt;if_equal&lt;/b&gt;)
        nil
    end

    def equals_coordinate?(other_x, other_y, &lt;b&gt;if_equal&lt;/b&gt;)
        if self.x == other_x &amp;amp;&amp;amp; self.y == other_y
            &lt;b&gt;if_equal.()&lt;/b&gt;
        end
            nil
    end
end
&lt;/pre&gt;
&lt;p&gt;Es de destacar que como no podemos retornar nada, hay que invocar a &lt;code&gt;other_location&lt;/code&gt; con la lambda, para que lo ejecute.&lt;/p&gt;
&lt;p&gt;Me ha encantado encontrarme el uso de funciones anónimas en este ejemplo; creo que combinándolo con el apartado anterior de &quot;Romper el nivel de abstracción&quot; puede quedar un código con menos efectos laterales.&lt;/p&gt;
&lt;h3&gt;Inverted Composition as a Replacement for Inheritance&lt;/h3&gt;
&lt;p&gt;Volvemos al ejemplo anterior del polimorfismo:&lt;/p&gt;
&lt;pre&gt;// Let’s create mother class
class Cell
&lt;b&gt;    attr_reader :location&lt;/b&gt;
end

class LivingCell &amp;lt; Cell
end

class DeadCell &amp;lt; Cell
end
&lt;/pre&gt;
&lt;p&gt;Esta extracción al crear el padre no introduce un nuevo concepto de dominio. La herencia es a menudo utilizada como una forma de &quot;reusar&quot; más que para eliminar duplicidades.&lt;br /&gt;
Es un error común crear clases 'base' de este estilo, que pueden llegar a ser un contenedor de comportamientos muy poco relacionados.&lt;/p&gt;
&lt;p&gt;Si la herencia no es un solución, ¿qué otras opciones tenemos?&lt;/p&gt;
&lt;p&gt;En el ejemplo usa módulos de Ruby, y en otros lenguajes tendríamos Traits (Groovy) y en otros algo como los decoradores.&lt;/p&gt;
&lt;pre&gt;class LivingCell
    include HasLocation
end

class DeadCell
    include HasLocation
end
&lt;/pre&gt;
&lt;p&gt;Llegados a este punto, con la duplicidad medio resuelta, vemos que tenemos dos clases apuntando al mismo tipo, &lt;code&gt;(Living|Dead)Cell&lt;/code&gt; a &lt;code&gt;Location&lt;/code&gt;.&lt;br /&gt;
Una técnica útil es &lt;strong&gt;Invertir la dependencia&lt;/strong&gt;, que la localización apunte a las células.&lt;/p&gt;
&lt;pre&gt;class Location
    attr_reader :x, :y
&lt;b&gt;    attr_reader :cell&lt;/b&gt;
end 

class LivingCell
    def stays_alive?(number_of_neighbors)
        number_of_neighbors == 2 ||
        number_of_neighbors == 3
    end 
end 

class DeadCell
    def comes_to_life?(number_of_neighbors)
        number_of_neighbors == 3
    end
end
&lt;/pre&gt;
&lt;p&gt;De esta manera, las clases que representan células están únicamente centradas en la información que les atañe, como las reglas sobre cómo evolucionan.&lt;br /&gt;
También hemos extraído la topología de las reglas del juego, viendo que el tipo &lt;code&gt;Location&lt;/code&gt; tiene un rol de estructura, que une la malla con la célula.&lt;/p&gt;
&lt;p&gt;Comparándo con mi código, la composición invertida es muy similar a la solución que había propuesto yo inicialmente en la kata: &lt;code&gt;Grid -&amp;gt; Position -&amp;gt; Info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Como 'Rule of Thumb' la dependencia de clases debe ir desde la que más cambia a la que menos cambia, desde la menos estable a la más estable, es decir, la dependencia la tiene que tener aquella que tiene más posibilidades de cambiar sus atributos.&lt;/p&gt;
&lt;h2&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Programar el Juego de la Vida de dos maneras diferentes y luego leerme este libro ha resultado ser un ejercicio muy intenso y productivo. ¡Y escribir este post, claro!&lt;br /&gt;
Me llevo un buen montón de herramientas.&lt;/p&gt;
&lt;p&gt;A continuación voy a leerme el libro &lt;a href=&quot;https://www.goodreads.com/book/show/13507787-practical-object-oriented-design-in-ruby&quot; target=&quot;_blank&quot;&gt;&quot;Practical Object-Oriented Design in Ruby&quot;&lt;/a&gt;, de Sandi Metz. Os iré contando!&lt;/p&gt;
</description>
          <pubDate>2016-09-14T09:16:31+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/09/recorriendo-poco-a-poco-el-libro-understanding-the-4-rules-of-simple-design</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/09/recorriendo-poco-a-poco-el-libro-understanding-the-4-rules-of-simple-design</guid>
        </item>
      
    
      
        <item>
          <title>Kata: object literal to query string</title>
          <description>&lt;p&gt;No long ago, we had to write a function that takes an object and returns a string to be sent as part of the query string in the request. This was because the communication mechanism was &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot; target=&quot;_blank&quot;&gt;JSONP&lt;/a&gt; that works via the GET method. The server was already expecting the specific format shown below and we didn't have access to the server in order to change it and accept just an URL-encoded JSON. The fun started when we realised that an object may be a tree structure with nested objects. We test-drove the solution and found it interesting as a code kata. This is the expected behavior of the function:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/Suui/2dc92868812dbcec05d94daffa8d418a.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;This is our implementation:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/Suui/e853998ca19d172c6398e4147e8ef2b2.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Note that the object can't contain arrays neither functions.&lt;/p&gt;
&lt;p&gt;Play with the code in &lt;a href=&quot;https://babeljs.io/repl/#?babili=false&amp;evaluate=true&amp;lineWrap=false&amp;presets=es2015%2Creact%2Cstage-2&amp;code=function%20objectToQueryString(obj)%7B%0A%20%20%20%20%20if%20(isNotConvertible(obj))%20return%20%22%22%3B%0A%20%0A%20%20%20%20%20let%20queryString%20%3D%20%22%22%3B%0A%20%20%20%20%20for%20(let%20propertyName%20in%20obj)%7B%0A%20%20%20%20%20%20%20%20%20let%20propertyValue%20%3D%20obj%5BpropertyName%5D%3B%0A%20%20%20%20%20%20%20%20%20if%20(isAnObject(propertyValue))%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20let%20convertedNestedProperties%20%3D%20objectToQueryString(propertyValue)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.split('%26')%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20let%20surroundedProperties%20%3D%20surroundNestedWithBrackets(%0A%09%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20propertyName%2C%20%0A%09%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20convertedNestedProperties)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20queryString%20%2B%3D%20surroundedProperties.join('%26')%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20queryString%20%2B%3D%20%60%24%7BpropertyName%7D%3D%24%7BpropertyValue%7D%60%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20queryString%20%2B%3D%20'%26'%3B%0A%20%20%20%20%20%7D%0A%20%20%20%20%20return%20removeLastAmpersand(queryString)%3B%0A%20%7D%0A%20%0A%20function%20surroundNestedWithBrackets(propertyName%2C%20nestedProperties)%7B%0A%20%20%20%20%20let%20surrounded%20%3D%20%5B%5D%3B%0A%20%20%20%20%20for(let%20i%20%3D%200%3B%20i%20%3C%20nestedProperties.length%3B%20i%2B%2B)%7B%0A%20%20%20%20%20%20%20%20%20let%20nested%20%20%3D%20nestedProperties%5Bi%5D%2C%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20nestedName%2C%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20nestedValue%3B%0A%20%20%20%20%20%20%20%20%20let%20isNestedObject%20%3D%20nested.indexOf('%5B')%20%3E%3D%200%3B%0A%20%20%20%20%20%20%20%20%20if%20(isNestedObject)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20nestedName%20%3D%20substringUntil('%5B'%2C%20nested)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20nestedValue%20%3D%20substringFrom('%5B'%2C%20nested)%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20nestedName%20%3D%20substringUntil('%3D'%2C%20nested)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20nestedValue%20%3D%20substringFrom('%3D'%2C%20nested)%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20surrounded.push(%60%24%7BpropertyName%7D%5B%24%7BnestedName%7D%5D%24%7BnestedValue%7D%60)%3B%0A%20%20%20%20%20%7D%0A%20%20%20%20%20return%20surrounded%3B%0A%20%7D%0A%20%0A%20function%20substringUntil(symbol%2C%20text)%7B%0A%20%20%20%20%20return%20text.substring(0%2C%20text.indexOf(symbol))%3B%0A%20%7D%0A%20%0A%20function%20substringFrom(symbol%2C%20text)%7B%0A%20%20%20%20%20return%20text.substring(text.indexOf(symbol))%3B%0A%20%7D%0A%20%0A%20function%20isNotConvertible(obj%20)%7B%0A%20%20%20%20%20return%20!obj%20%20%7C%7C%0A%20%20%20%20%20%20%20%20%20typeof(obj)%20!%3D%20'object'%20%7C%7C%0A%20%20%20%20%20%20%20%20%20JSON.stringify(obj)%20%3D%3D%22%7B%7D%22%3B%0A%20%7D%0A%20%0A%20function%20isAnObject(val)%7B%0A%20%20%20%20%20return%20typeof(val)%20%3D%3D%20'object'%3B%0A%20%7D%0A%20%0A%20function%20removeLastAmpersand(queryString)%7B%0A%20%20%20%20%20if%20(queryString.lastIndexOf(%22%26%22)%20%3D%3D%20queryString.length%20-1)%7B%0A%20%20%20%20%20%20%20%20%20return%20queryString.substring(0%2C%20queryString.length%20-1)%3B%0A%20%20%20%20%20%7D%0A%20%20%20%20%20return%20queryString%3B%0A%20%7D%0Aconsole.log(objectToQueryString(%7Ba%3A1%2C%20b%3A2%2C%20c%3A%7Bd%3A4%2C%20e%3A%7Bx%3A%7Bz%3A5%7D%2C%20h%3A7%7D%7D%7D))%3B%0A%0A%0A%0A&quot; target=&quot;_blank&quot;&gt;the Babel Repl&lt;/a&gt;.&lt;/p&gt;
</description>
          <pubDate>2016-09-07T20:29:20+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/09/kata-object-literal-to-query-string</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/09/kata-object-literal-to-query-string</guid>
        </item>
      
    
      
        <item>
          <title>Antonio de la Torre se une a Codesai</title>
          <description>&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/08/P1190246.jpg&quot;&gt;&lt;img class=&quot;wp-image-2934 size-large&quot; src=&quot;/assets/P1190246-1024x768.jpg&quot; alt=&quot;Foto de equipo&quot; /&gt;&lt;/a&gt; Miguel, Antonio, Carlos, Jose - Tenerife, Julio 2016&lt;/p&gt;
&lt;p&gt;Estamos de celebración, super &lt;a href=&quot;https://about.me/adelatorrefoss&quot; target=&quot;_blank&quot;&gt;Antonio de la Torre&lt;/a&gt; forma parte del equipo Codesai desde esta misma semana. Antonio &lt;a href=&quot;https://adelatorrefoss.wordpress.com/2016/07/30/cierre-de-ciclo/&quot; target=&quot;_blank&quot;&gt;ya había decidido&lt;/a&gt; que se volvía a su tierra (Oviedo) con la familia cuando nos encontramos en JSDay 2016 y estuvimos charlando. Me contó sus planes y ví que nos podía encajar muy bien en Codesai, donde necesitabamos crecer en vista de la alianza con Kairós. La actitud de Antonio nos gustó a todo el equipo, su madurez, su empatía y como no, su experiencia con métodos ágiles. Cualquiera que haya hablado un rato con Antonio sabe que tiene una mente abierta y predisposición para ayudar a los demás. Desde el JSDay nos pusimos a trabajar para alinearnos en el plano más técnico. Hicimos una kata de programación en remoto, Antonio se leyó algunos libros que le recomendamos, y encima nos fuimos juntos al evento Software Craftsmanship de Pamplona (donde fuimos compañeros de habitación) y al AOS de Galicia. Tras los eventos, Antonio vino al curso de TDD que impartió Luis en Madrid y a la semana siguiente vino al que impartí yo en Tenerife. Así hicimos entrevista técnica y training, todo en uno, en un proceso que ha durado varios meses. Durante todos estos encuentros, absolutamente todos los miembros del equipo han podido conocer en persona a Antonio, pese a que estamos distribuidos en diferentes provincias. Estamos realmente contentos y nos sentimos afortunados de contar con Antonio en el equipo. Es una nueva etapa que nos hará crecer a todos.&lt;/p&gt;
&lt;p&gt;El equipo Codesai ha crecido relativamente rápido pero sin buscarlo. Ahora el reto es mantenerlo y hacer más piña cada día. Hacer del equipo un instrumento que ayude a mejorar la industria del desarrollo de software y por qué no, tambien aportar nuestro granito de arena a la sociedad.&lt;/p&gt;
</description>
          <pubDate>2016-08-23T10:17:27+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/08/antonio-de-la-torre-se-une-a-codesai</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/08/antonio-de-la-torre-se-une-a-codesai</guid>
        </item>
      
    
      
        <item>
          <title>Claves primarias: inmutabilidad y generación</title>
          <description>&lt;p&gt;Hace unos días &lt;a href=&quot;https://twitter.com/Pablyte/status/754056720666730500&quot;&gt;Pablo Iglesias&lt;/a&gt; &lt;a href=&quot;https://twitter.com/Pablyte/status/754056720666730500&quot;&gt;tuiteó&lt;/a&gt; una pregunta de Stack Exchange en la que hablaban sobre la inmutabilidad de las claves primarias. Se generó un debate bastante interesante en Twitter que se extendió más allá de la cuestión de la inmutabilidad. Este es un intento de recopilar y explicar algunos de los conceptos que se mencionaron durante ese debate.&lt;/p&gt;
&lt;h1&gt;Claves primarias mutables o inmutables&lt;/h1&gt;
&lt;p&gt;Para el que ande un poco perdido con el concepto, básicamente se trata de determinar si la clave primaria de una entidad debería poder cambiar o no una vez establecida. Por ejemplo: si me registro en un servicio online y utilizan mi email como PK, si el servicio me da la opción de cambiar mi cuenta de correo, la PK es mutable. Esto significa que en todos los sitios en los que el servicio se esté persistiendo mi email como PK va a tener que actualizar el dato para constatar el cambio. Independientemente de que usemos o no foreign keys, esto es un foco de dolor, especialmente si utilizamos distintos mecanismos de persistencia de datos. Si además nuestro software cuenta con funcionalidades como con auditar los cambios o cualquier tipo de integración con sistemas externos como herramientas de CRM y similar, tener PKs mutables se puede convertir en algo imposible.&lt;/p&gt;
&lt;p&gt;Parece que hubo un consenso generalizado respecto a que las PK deberían ser inmutables, así que no me voy a extender más en este punto.&lt;/p&gt;
&lt;h1&gt;Claves subrogadas o naturales&lt;/h1&gt;
&lt;p&gt;Cuando usamos una clave natural, el valor de la clave está relacionado con los datos que identifica. Por ejemplo, si estamos identificando libros, el ISBN podría ser un candidato a PK. El número de bastidor para un coche, número de serie de un ordenador, la MAC de una tarjeta de red, el número de una factura, etc. En resumen, utilizamos un dato del negocio para identificar nuestras entidades al persistirlas.&lt;/p&gt;
&lt;p&gt;Si, por otro lado, elegimos usar una clave subrogada, lo que estamos haciendo es generar un identificador único que no tiene nada que ver con los datos que identifica, pero se garantiza a nivel infraestructura que el dato es único.&lt;/p&gt;
&lt;p&gt;Aunque siempre pongo un gran &quot;depende&quot; y no soy muy amigo de las afirmaciones absolutas, la realidad es que llevo años utilizando claves subrogadas porque la experiencia me ha demostrado que suele ser una mala idea utilizar datos del negocio. La razón es muy sencilla: el negocio cambia.&lt;/p&gt;
&lt;p&gt;Ejemplos hay miles. Por tomar uno, &lt;a href=&quot;https://twitter.com/panicoenlaxbox&quot;&gt;Sergio León&lt;/a&gt; mencionaba los ISBN de los libros. Desarrollando un software para gestionar liberías podríamos pensar que el ISBN debería valernos, pero los libros muy viejos no tienen ISBN. Así que si de repente al librero le diese por dedicarse a vender libros antiguos de colección, tendríamos un problema importante. Ese tipo de situaciones se dan con mucha frecuencia y siempre cuando el desarrollo ya está bastante avanzado, que es cuando más daño hacen.&lt;/p&gt;
&lt;p&gt;Como el ejemplo del ISBN hay muchos y debemos tener en cuenta el coste del cambio. Hay quién podría utilizar el argumento de que es un error pensar en el futuro y que usar una clave subrogada es una decisión prematura basada en anticiparse a un posible cambio de negocio que no sabemos si alguna vez va a suceder. En esas circunstancias suele ser un buen ejercicio pensar en cuál sería el coste del cambio en el futuro frente al coste de usar una clave subrogada en el presente. Si lo pensamos en términos económicos, utilizar una clave natural podría implicar estar firmando una hipoteca muy cara.&lt;/p&gt;
&lt;p&gt;Además, como indicaba &lt;a href=&quot;https://twitter.com/pmolinam&quot;&gt;Pedro J. Molina&lt;/a&gt;, &quot;Si vas por clave natural acaba uno fácilmente con claves compuestas. Las de 4 campos ya no hacen gracia&quot;. Pero es que encima eso termina tocando mucho las narices cuando llega el momento de &quot;enchufarte&quot; a otras cosas. Es típico que el servicio que te permite asociar comentarios, likes, etc. te pida que le des un identificador único de tu entidad y nos podríamos volver locos buscando ejemplos que nos llevan a desear trabajar siempre con una clave subrogada.&lt;/p&gt;
&lt;h2&gt;Generación de las claves subrogadas&lt;/h2&gt;
&lt;p&gt;Venga, vamos a suponer que a estas alturas ya estamos convencidos de que vamos a identificar a nuestras entidades con claves inmutables y subrogadas al menos algunas veces. ¿Cómo las generamos? Este punto también generó debate y en este caso no había unanimidad ni de lejos.&lt;/p&gt;
&lt;p&gt;Para generar una clave subrogada podemos optar por dejar que la base de datos la genere por nosotros automáticamente cuando insertamos el registro o podemos ser nosotros desde el código los que proporcionemos la clave a la base de datos.&lt;/p&gt;
&lt;p&gt;La opción clásica es que la base de datos genere el identificador por ti y listo. Podemos usar un identity, secuencia o lo que nos proporcione la base de datos que utilicemos y no nos complicamos mucho la vida. Pero hay escenarios en los que nos podría interesar recurrir a otro tipo de mecanismos.&lt;/p&gt;
&lt;h2&gt;Mecanismos para la generación de claves subrogadas&lt;/h2&gt;
&lt;p&gt;Aunque podríamos ponernos muy creativos de cara a la generación de nuestras claves, hay ciertos mecanismos predominantes. No voy a posicionarme respecto a ninguno porque creo que su utilización depende mucho de los requisitos del negocio y de la infraestructura de la aplicación.&lt;/p&gt;
&lt;h3&gt;Guids&lt;/h3&gt;
&lt;p&gt;Generar Guids es algo sencillo, se puede hacer desde cualquier sitio y las posibilidades de colisión son absolutamente despreciables. En principio es un mecanismo interesante ya que nos permite tener el control desde el negocio y no depender de la base de datos para su generación. Además, entre sus virtudes podemos considerar que al usar un Guid estamos utilizando un identificador no sólo a la tabla, también entre todas las tablas e incluso entre varias bases de datos. Esto habilita con mucha más facilidad escenarios de &quot;merge&quot; en los que queremos juntar datos que provienen de varias fuentes.&lt;/p&gt;
&lt;p&gt;Por supuesto, también tiene sus contras, entre ellos que un Guid ocupa muchísimo más que una clave numérica y además &lt;a href=&quot;http://sqlmag.com/database-performance-tuning/clustered-indexes-based-upon-guids&quot;&gt;afecta negativamente&lt;/a&gt; al rendimiento de los índices clustered.&lt;/p&gt;
&lt;p&gt;Hay mucha literatura sobre este tema en internet, incluyendo algunos intentos de análisis sobre la diferencia desde el punto de vista de rendimiento. Además debemos tener en cuenta que la implementación de base de datos que utilicemos influye muchísimo. Como ejemplo, no es lo mismo usar &lt;a href=&quot;http://krow.livejournal.com/497839.html&quot;&gt;MySQL&lt;/a&gt; que &lt;a href=&quot;http://www.informit.com/articles/printerfriendly/25862&quot;&gt;SQL Server&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Numérico autoincrementado&lt;/h3&gt;
&lt;p&gt;Este mecanismo es uno de los más frecuentes y creo que no necesita mucha explicación. El standard SQL:2003 define los tipos IDENTITY y SEQUENCE pero dependemos de la base de datos que estemos utilizando. Por ejemplo, en MySQL está el AUTO_INCREMENT y en PostgreSQL también está el SERIAL (creo que es &quot;azucar sintáctico&quot; para definir un SEQUENCE).&lt;/p&gt;
&lt;h3&gt;HiLo&lt;/h3&gt;
&lt;p&gt;A grandes rasos, con HiLo la aplicación reserva con antelación en la base de datos un rango de identificadores que serán utilizados necesite insertar nuevos registros en la base de datos. Cuando la aplicación ha usado todos los identificadores, va a la base de datos y reserva más. NHibernate usa esta técnica y también es posible usarla en Entity Framework. Entre sus ventajas está que nos permite utilizar identificadores de tipo numérico (para los que demandan rendimiento) y entre las desventajas que genera &quot;lagunas&quot; entre los identificadores generados. Si una aplicación reserva los identificadores del 1 al 10 y luego usa únicamente 5, los identificadores de 6 al 10 quedarán sin usar.&lt;/p&gt;
&lt;h3&gt;Dependiendo de un tercero&lt;/h3&gt;
&lt;p&gt;Consiste en delegar en un tercero la estrategia de generación de nuestra clave. Desde nuestra aplicación, cuando queramos identificar una entidad, llamaremos a este servicio externo y nos proporcionará una identidad que será la que luego persistiremos.&lt;/p&gt;
&lt;p&gt;Cuando estamos haciendo HiLo, en parte estamos utilizando este mecanismo. Aunque sea nuestra base de datos la que genera los identificadores, en realidad es un tercero (la clase que gestiona el algoritmo) el que nos los está proporcionando.&lt;/p&gt;
&lt;p&gt;Un ejemplo (raro pero real) es utilizarlo cuando la persistencia se realiza sobre mecanismos que no tienen soporte de autonuméricos, delegando la generación del autonumérico sobre un tercero para luego persistir el dato. Otro escenario de uso sería si necesitamos asegurarnos de que nuestros identificadores son únicos entre varios sistemas y además queremos aplicar reglas especiales para su generación.&lt;/p&gt;
&lt;p&gt;Siendo realistas, es un mecanismo que añade complejidad y no es necesario la mayoría de las veces, pero no deja de ser interesante mencionarlo.&lt;/p&gt;
&lt;h2&gt;¿Cuál uso?&lt;/h2&gt;
&lt;p&gt;Según las respuestas a la conversación que originó el debate, una gran mayoría respondería &quot;secuencias numéricas autoincrementadas y no me complico&quot;. No les falta razón, pero hay veces que complicarnos es la opción menos complicada. Complicado, eh?&lt;/p&gt;
&lt;p&gt;Existen muchas razones que podrían llevarnos a querer complicarnos la vida y no pretendo hacer un estudio detallado, pero al menos quiero poner algunos ejempos comunes.&lt;/p&gt;
&lt;h3&gt;CQS&lt;/h3&gt;
&lt;p&gt;Si queremos usar &lt;a href=&quot;http://martinfowler.com/bliki/CommandQuerySeparation.html&quot;&gt;CQS&lt;/a&gt; (Command-Query Separation) partimos del principio de que nuestros comandos no devuelven nada. Si tenemos un comando que inserta una entidad, deberíamos saber el id de la entidad que estamos insertando antes de llamar al propio comando, ya que el comando no va a devolvernos nada.&lt;/p&gt;
&lt;p&gt;Podríamos pensar que tampoco pasa nada porque un comando de inserción devuelva un valor y ya está. No voy a entrar a valorar esto, pero en cuanto queramos que el modelo de ejecución de nuestros comandos sea asíncrono (a través de una cola o similar), volvemos al problema inicial.&lt;/p&gt;
&lt;h3&gt;Modo offline&lt;/h3&gt;
&lt;p&gt;Si nuestra aplicación tiene como requisito de negocio proporcionar la posibilidad trabajar offline, recurrir al servidor de base de datos para obtener el id de una entidad no es una opción.&lt;/p&gt;
&lt;p&gt;Imaginemos una aplicación como Evernote. Cuando creemos una nueva nota y no tengamos conexión, ¿qué identificador tendrá esa nota entonces? Si generamos ese identificador desde el código (mediante, por ejemplo, un Guid) podremos realizar la sincronización fácilmente una vez tengamos conexión.&lt;/p&gt;
&lt;p&gt;Aunque en el caso de CQS, HiLo podría ser una opción perfectamente válida, en este caso sería la opción menos recomendada ya que tendríamos la necesidad de conectarnos al servidor de base de datos si creamos tantas entidades que agotamos nuestro &quot;cupo&quot; de identificadores.&lt;/p&gt;
&lt;h3&gt;Si no usamos SQL&lt;/h3&gt;
&lt;p&gt;Este caso es ignorado por muchos desarrolladores cuyo contexto profesional se limita a bases de datos SQL para persistir información. Cuando salimos del mundo SQL, muchísimos mecanismos de persistencia piden que seamos nosotros desde el código los que proporcionemos nuestros identificadores. Como ejemplo &quot;primitivo&quot; a la par que útil, si persistimos en disco tendremos que proporcionar nosotros el identificador de nuestra entidad (nombre del archivo).&lt;/p&gt;
&lt;h1&gt;Conclusiones&lt;/h1&gt;
&lt;p&gt;Tenemos multitud de mecanismos para identificar nuestras entidades. Debemos conocerlos bien y hacer un uso inteligente de ellos en función de nuestros requisitos de negocio, pero nunca complicarnos la vida innecesariamente.Y muy importante, que el rendimiento únicamente sea un argumento cuando tenemos requisitos no funcionales que nos hablan de rendimiento. Hablar de rendimiento cuando no tienes requisitos relacionados con el rendimiento suele ser foco de optimizaciones prematuras.&lt;/p&gt;
&lt;p&gt;Y con esto creo que termino el &quot;resumen&quot; de las cosas que se comentaron en el hilo de Twitter y algunas de las que pasaron por mi cabeza. Seguro que me dejo en el tintero muchas observaciones y muchos matices, me conformo si a alguien le vale para entender que hay vida más allá de los identificadores mutables naturales.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.modestosanjuan.com/claves-primarias-inmutabilidad-y-generacion/&quot;&gt;Este post es un cross-posting de mi blog.&lt;/a&gt;&lt;/p&gt;
</description>
          <pubDate>2016-08-01T08:26:10+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/08/claves-primarias-inmutabilidad-y-generacion</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/08/claves-primarias-inmutabilidad-y-generacion</guid>
        </item>
      
    
      
        <item>
          <title>Estuvimos en AOS2k16</title>
          <description>&lt;p&gt;
Los días 1 y 2 de Julio de 2016, la mitad del equipo Codesai estuvimos en el &lt;strong&gt;Open Space&lt;/strong&gt; de la comunidad Agile Spain, el &lt;a href=&quot;http://aos2016.agile-spain.org/&quot;&gt;AOS&lt;/a&gt;. Un evento brillantemente organizado por el capítulo gallego de la comunidad y celebrado en Santiago de Compostela. Enhorabuena a todos los organizadores por una organización perfecta. Muchísimas gracias por hacernos pasar dos días inolvidables. El lugar del evento era espectacular, en plena naturaleza. Las salas de conferencias eran acojonantes, una de ellas era una cueva, ¡literalmente... y chulísima! Hizo un tiempo buenísimo con mucho sol, cosa rara según los lugareños. Tuvimos suerte que todas las sesiones que propusimos fueron votadas y además nos lo pasamos muy bien facilitándolas.&lt;/p&gt;
&lt;p&gt;
Primero me tocó a mí con una sesión sobre &lt;strong&gt;Principios y técnicas de diseño de software&lt;/strong&gt;. Puse en la pizarra muchos de los que yo conozco y fuimos complentando con más que los participantes fueron añadiendo. La participación y el buen ambiente hizo que el rato se pasara volando.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pbs.twimg.com/media/CmWxdHPWcAAzmCb.jpg&quot;&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;/assets/CmWxdHPWcAAzmCb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Gracias a &lt;a href=&quot;https://medium.com/@viroide/road-to-good-coder-9220960f14c5#.ho417c3fy&quot;&gt;Jon. E. Eguiluz que ha escrito sobre la sesión en su blog&lt;/a&gt;, tenemos enlaces a muchos de los temas tratados. Gracias a &lt;a href=&quot;https://twitter.com/manuelkstro&quot;&gt;Manuel Castro&lt;/a&gt; por la foto.&lt;/p&gt;
&lt;p&gt;
Muy relacionada con mi sesión, Fran y Alfredo habían preparado otra sobre &lt;a href=&quot;https://en.wikipedia.org/wiki/Connascence_(computer_programming)&quot;&gt;Connascence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pbs.twimg.com/media/CmXqHT6XgAA0blx.jpg&quot;&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;/assets/CmXqHT6XgAA0blx.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Fran, al igual que yo, tenía frío dentro de la cueva y necesitaba el jersey :-). Esta charla seguramente será presentada en más eventos futuros.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pbs.twimg.com/media/CmYk7aiXYAE4Z7U.jpg&quot;&gt;&lt;img class=&quot;alignright&quot; src=&quot;/assets/CmYk7aiXYAE4Z7U.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Gracias a &lt;a href=&quot;https://twitter.com/raul_herranz&quot; target=&quot;_blank&quot;&gt;Raul Herranz&lt;/a&gt; por la foto. Al final del día Ronny facilitó una sesión sobre las dificultades a la hora de aprender TDD y sus propios errores durante el proceso de aprendizaje. La sala estaba repleta. En esa sesión estábamos los cuatro y sin haberlo preparado pudimos puntualizar detalles que nos parecían relevantes a unos y otros de forma muy amena al menos para mí.&lt;/p&gt;
&lt;p&gt;
Antes de la sesión de Ronny, el bueno de &lt;a href=&quot;https://twitter.com/dafergon&quot; target=&quot;_blank&quot;&gt;David Fernández&lt;/a&gt;, compañero de Kairós DS tuvo la iniciativa de invitarme a co-facilitar una sesión sobre experiencias en la adopción de XP en equipos. Pese a ser la hora de la siesta, la participación fue alta. David propuso un modelo &quot;lean coffee&quot; y lo facilitó muy bien. Gracias por la invitación David!&lt;/p&gt;
&lt;p&gt;
A veces en eventos de la comunidad ágil existe la &lt;strong&gt;crítica de&lt;/strong&gt; que hay &lt;strong&gt;pocas sesiones técnicas&lt;/strong&gt;, tanto en AOS como en CAS. Creo que a veces es cierto pero tambien creo que es cuestión de que los que somos más técnicos tengamos la iniciativa de cambiarlo. En un Open Space uno tiene que buscar la manera de sacarle partido mediante la participación. No vale querer un evento más técnico sin proponerlo ni participar activamente en ello. Es un evento que &lt;strong&gt;se hace entre todos&lt;/strong&gt;. Creo que nuestra &lt;strong&gt;responsabilidad como developers es ayudar a reducir esa barrera&lt;/strong&gt; entre tecnología y negocio. Era la idea original de los métodos ágiles, limar esa diferencia y ser todos un equipo. A los técnicos nos toca comprender a los no-técnicos, siendo conscientes de nuestra ignorancia en otras áreas. Sin infravalorar su labor en ningún caso. Y también de ayudarles a que ellos sean conscientes de su ignorancia y puedan empatizar más con nosotros explicando las cosas en un lenguaje que les pueda llegar.  Nuestras sesiones en AOS eran todas técnicas y sin embargo pude ver a gerentes, facilitadores, agentes del cambio... Tenían interes por llevarse algo de esas sesiones, por aprender. Desde luego que no infravaloraban lo que se estaba contando sino al contrario, le veían mucho valor. En la hora de la comida incluso me dijeron que daba &quot;envidia sana&quot; oirnos hablar con tanta pasión. Creo que tiene que ver con explicarse desde un punto que busca el sentido común. Cuando el objetivo es la mejora contínua y no un rollo friki, todo el mundo pone la oreja.&lt;/p&gt;
&lt;p&gt;
Una de los grandes despertares de este AOS para mí ha sido darme cuenta &lt;strong&gt;lo importante que es participar e AOS&lt;/strong&gt;. Llevaba desde 2013 sin hacerlo y antes de eso tambíen creo que desde 2009. Personalmente con todo lo que viajo por trabajo, cualquier evento que requiera desplazarse supone un gran esfuerzo. Tengo que justificarme a mi mismo que puedo aumentar la cuenta de días fuera de casa, dejar que la bandeja de entrada se pete, que mis clientes no puedan contar conmigo, el efecto medioambiental de los viajes...&lt;br /&gt;
Hay muchísimos eventos y muy buenos. Creo que por el hecho de conocer a mucha gente de la comunidad, fuí olvidando lo importante que es tener esas conversaciones con los amigos que ya conoces, con los habituales del AOS. Tenía sensación de que era más ocio que aprendizaje. Durante un tiempo prioricé salir a otros eventos a conocer a otras personas, incluso en otros países. Ver si de esa forma aumentaba el retorno de la inversión. Estuvo bien porque he conocido a mucha gente, pero eso no es mejor que lo otro, es diferente. Volver a conversar con tantos sabios, habituales del AOS, cenando y de copas por Santiago, me aportó muchísimo valor. Me hizo darme cuenta que participar en &lt;strong&gt;AOS me garantiza el retorno de inversión&lt;/strong&gt;.  Debo agradecer especialmente a los amigos gallegos de la organización que me animasen a asistir a &quot;su AOS&quot; porque eso fué lo que me enganchó para comprar el billete. Reconectar con la comunidad ha sido magnifico. Desde el minuto 1 hasta la vuelta a Madrid con Yeray y Jero en coche. La gente es muy grande, muy buena gente y grandes profesionales.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
          <pubDate>2016-07-08T17:04:15+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/07/estuvimos-en-aos2k16</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/07/estuvimos-en-aos2k16</guid>
        </item>
      
    
      
        <item>
          <title>Nos asociamos con Kairós DS</title>
          <description>&lt;p&gt;&lt;strong&gt;Notición!&lt;/strong&gt; Nos asociamos con Kairós!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Estamos de enhorabuena&lt;/strong&gt;, el equipazo de &lt;em&gt;&lt;a href=&quot;http://kairosds.com/ target=&quot;&gt;Kairós DS&lt;/a&gt; se convierte en partner de Codesai&lt;/em&gt; adquiriendo una parte de la empresa.&lt;/p&gt;
&lt;p&gt;En los últimos meses nos habíamos cruzado por múltiples caminos. A nosotros nos hablaban muy bien de Kairós y teníamos buenos amigos allí como &lt;a href=&quot;https://twitter.com/HelderDOliveira&quot;&gt;Helder de Oliveira&lt;/a&gt; que de paso nos daba a conocer en Kairós. Aprovechamos la ocasión para agradecerle a Helder su confianza y su apoyo, tanto a Codesai como a toda la comunidad Software Craftsmanship. Sin quererlo incluso acabamos llegando al mismo cliente desde diferentes perspectivas.&lt;/p&gt;
&lt;p&gt;Esta unión es una alianza estratégica: Codesai aporta su experiencia en desarrollo con XP, en testing, en el cuidado de la calidad y la mantenibilidad del software. La experiencia con formación técnica y mentoring.&lt;br /&gt;
&lt;img src=&quot;/assets/kairosds400x400.jpg&quot;/&gt;&lt;br /&gt;
&lt;strong&gt;Kairós&lt;/strong&gt; aporta su &lt;strong&gt;experiencia en transformación digital en grandes organizaciones&lt;/strong&gt;, su &lt;strong&gt;gran equipo&lt;/strong&gt; de Agile Coaching, el know-how en &lt;strong&gt;grandes proyectos&lt;/strong&gt; para banca y la capacidad de llegar a clientes de un tamaño que hasta ahora era inaccesible para Codesai. Es un win-win evidente.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Compartimos la oficina en &lt;a href=&quot;https://www.google.es/maps/place/Calle+de+Claudio+Coello,+78,+28001+Madrid/@40.4301529,-3.6878677,17z/data=!3m1!4b1!4m5!3m4!1s0xd42289448065b3b:0xbb9d75b79f81fb22!8m2!3d40.4301529!4d-3.685679https://www.google.es/maps/place/Calle+de+Claudio+Coello,+78,+28001+Madrid/@40.4301529,-3.6878677,17z/data=!3m1!4b1!4m5!3m4!1s0xd42289448065b3b:0xbb9d75b79f81fb22!8m2!3d40.4301529!4d-3.685679&quot;&gt;Madrid en la calle Claudio Coello, 78.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Esta alianza no cambia nuestros valores ni principios, ni la forma en que trabajamos. Lo que nos permite es crecer&lt;/strong&gt; a un tamaño suficiente para que cualquier tipo de empresa pueda contar con nosotros. Nuestro catalogo de servicios crece, &lt;strong&gt;ampliamos la oferta para nuestros clientes manteniendo el nivel de calidad.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Los vamos a celebrar con varios &lt;strong&gt;eventos en la oficina: un curso técnico en abierto a finales de Julio, un evento de comunidad y otro de networking con nuestros clientes y amigos.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ya sabes, ahora &lt;strong&gt;Codesai&lt;/strong&gt; y &lt;strong&gt;Kairós&lt;/strong&gt;, son buenos amigos :-)&lt;/p&gt;
</description>
          <pubDate>2016-06-22T07:53:11+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/06/nos-asociamos-con-kairos-ds</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/06/nos-asociamos-con-kairos-ds</guid>
        </item>
      
    
      
        <item>
          <title>Estuvimos en Pamplona Software Craftsmanship 2016</title>
          <description>&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/06/ClVQUOAWYAQopZv.jpg&quot;&gt;&lt;img class=&quot;wp-image-2868 size-large alignleft&quot; src=&quot;/assets/ClVQUOAWYAQopZv-1024x768.jpg&quot; alt=&quot;Gorka, Pablo e Iker en la apertura&quot; /&gt;&lt;/a&gt; &lt;strong&gt;Gorka, Pablo e Iker en la apertura&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;El pasado fin de semana, 17 y 18 de Junio, buena parte del equipo Codesai estuvo en &lt;a href=&quot;http://pamplonaswcraft.com/&quot; target=&quot;_blank&quot;&gt;Pamplona Software Craftsmanship 2016&lt;/a&gt;. Eventazo de categoría. Este evento fue organizado por Iker, Gorka y Pablo, los artesanos de &lt;a href=&quot;http://540deg.com/&quot; target=&quot;_blank&quot;&gt;540deg&lt;/a&gt;. Ellos se inspiraron en Socrates Canaries 2016, evento que tuvo lugar en Las Palmas en Marzo. Vinieron al evento y en las conversaciones de pasillo y bar se animaron a montar un evento similar en su tierra. Poco después nos llegó invitación para ser ponentes en el evento. Y lógicamente con lo majos que son no pudimos negarnos. Y menos mal porque ha sido un evento muy bueno. A diferencia de Socrates que es 100% open space, el de Pamplona sí tenía algunos speakers invitados además de haber lugar para open space. Con la agenda de eventos tan apretada que tenemos, invitarnos directamente fue una buena forma de asegurarse nuestra participación por lo que estamos doblemente agradecidos. El hashtag fue &lt;a href=&quot;https://twitter.com/search?q=scpna&quot;&gt;#scpna&lt;/a&gt;, a través del cual pueden encontrarse fotos y comentarios realizados en vivo.&lt;/p&gt;
&lt;p&gt;En el tren coincidimos unos cuantos amigos en la cafetería y pudimos comprobar que los de Renfe no están bien preparados para la ocasión porque se les acabó la cerveza antes de llegar a Pamplona :-D&lt;/p&gt;
&lt;p&gt;Muy buen ambiente desde el viaje, aprovechando además para conocer a los demás ponentes y participantes. Al llegar nos encontramos con un montón de amigos para cenar y nos dieron las tantas.&lt;/p&gt;
&lt;p&gt;Tanto Alfredo como Modesto como yo, contamos con una hora entera como ponentes. En mi caso quise convertir la sesión en un coloquio donde la gente pudiera dar feedback y el nivel de participación fue muy bueno. El tiempo se me hizo cortísimo. La mitad de las cosas que quería contar se quedaron fuera y es que nunca antes había contado todas estas cosas y no había tenido oportunidad de medir los tiempos. Mi buen amigo Antonio de la Torre me comentó que me faltó una conclusión al estilo &quot;call to action&quot;,  comentario que agradezco mucho. Cualquier otro feedback es bienvenido. La mayoría de las sesiones las grabaron entre el Planetario y &lt;a href=&quot;http://codely.tv/&quot;&gt;Codely.tv&lt;/a&gt;, y estoy deseando verlas porque me perdí 4 charlas que me interesaban un montón, un poquito a sabiendas de que eran en la mejor sala para ser grabadas y confiando en que la grabación será buena. Así que estoy deseando que las publiquen.&lt;/p&gt;
&lt;p&gt;El open space tuvo un alto nivel de participación con sesiones muy interesantes, era dificil escoger a qué sesión entrar. Fue estupendo reencontrarse con amigos que llevaba años sin ver y desvirtualizar a grandes profesionales compañeros del gremio que ya seguía por las redes. Fue estupendo conocer a más cracks de &lt;a href=&quot;http://karumi.com/&quot;&gt;Karumi&lt;/a&gt; (que por cierto a la charla de Pedro Gómez sí que pude ir y me encantó) y a parte de &lt;a href=&quot;http://www.47deg.com/&quot;&gt;47deg&lt;/a&gt;. Algunos slots me los perdí mientras hablaba con gente por los pasillos, cosa que sucede mucho en los open space, que las conversaciones son una parte muy muy enriquecedora del evento. Lo más difícil del open space es vencer la sensación de impotencia de no poder estar en todos sitios a la vez. En el segundo día lo conseguí y me eché una siesta despues de comer que me permitió luego casi empatar la cena de cierre con mi vuelo de amanecida. Y es que la organización del evento lo hizo todo a la perfección, hasta el último momento. Son grandísimos anfitriones. Y lo más llamativo es que nunca les vi nerviosos, estan tranquilotes y disfrutando del evento. Me llamó muchísimo la atención que en la zona de encuentro, además de haber cafés, zumos y fruta, había un grifo de cerveza y tambien cervezas patrocinadas por 47deg. Cerveza disponible casi las 24 horas :-D&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codesai.com/wp-content/uploads/2016/06/ClTN8YmXEAAxxaZ.jpg&quot;&gt;&lt;img class=&quot;wp-image-2870 size-large aligncenter&quot; src=&quot;/assets/ClTN8YmXEAAxxaZ-1024x276.jpg&quot; alt=&quot;Retrospectiva final&quot; /&gt;&lt;/a&gt; &lt;strong&gt;Retrospectiva final&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fue curioso que en la retrospectiva del primer día a penas hubieron puntos a mejorar y los pocos que salieron estaban corregidos al día siguiente. Por lo tanto en la retrospectiva de cierre no hubo ni un solo punto común de mejora a destacar. Una organización brillantísima, excepcional.&lt;/p&gt;
&lt;p&gt;Como parte del open space tuve ocasión de facilitar un taller de refactoring de 2 horas donde practicamos Parallel Change y Narrow Change, el mismo que habíamos hecho Pawel Duda y yo en Socrates con alguna mejora. Fue muy divertido, gracias a todos por participar en el taller.&lt;/p&gt;
&lt;p&gt;Estoy muy contento de ver que tanto Ronny como Miguel y Dani, nuestros aprendices, propusieron varias sesiones en el open space y que además salieron votadas y se desarrollaron muy bien. Da gusto ver a la gente joven progresar.&lt;/p&gt;
&lt;p&gt;Al final del evento la gente del Planetario de Pamplona que fueron majísimos todo el evento, nos dieron un estupendo paseo por el cielo y nos proyectaron un vídeo que me transportó 20 años atrás a la demo scene del Amiga, de cuando la Euskal Party y antes incluso. Para los más jóvenes dejo aquí la &lt;a href=&quot;https://www.youtube.com/watch?v=c5kuYfTCGLg&quot;&gt;famosa demo de Space Balls &lt;/a&gt;que es del 91 o 92. La mayoría de esta gente programaba en ensamblador con máquinas de medio mega de ram y secuenciadores de 4 pistas para la música. Gran cierre.&lt;/p&gt;
&lt;p&gt;Muchas gracias a todos por hacer el evento posible!&lt;/p&gt;
</description>
          <pubDate>2016-06-21T14:15:01+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/06/estuvimos-en-pamplona-software-craftsmanship-2016</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/06/estuvimos-en-pamplona-software-craftsmanship-2016</guid>
        </item>
      
    
      
        <item>
          <title>Lanzamos Codesai con mucha ilusión</title>
          <description>&lt;p&gt;&lt;strong&gt;Después de dos años trabajando bajo la marca de CB&amp;amp;A (Carlos Blé y Asociados)&lt;/strong&gt; ha llegado el momento de crear algo más grande, una marca que proporcione a nuestros clientes la confianza de que puede funcionar sin Carlos, cuando haga falta. Una marca donde el interés del grupo y de la comunidad está por encima de los individuos. &lt;strong&gt;Un grupo que hace de su trabajo su pasión. Donde trabajo y afición son la misma cosa.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Aunque sea con el mismo núcleo, queremos dar a conocer a todo el mundo que este grupo de profesionales se ha consolidado y es un equipo bien alineado, maduro y más ilusionado que nunca por ayudar a los demás. Por crear grandes productos. Por impactar en la sociedad. Queremos subir el nivel del sector de desarrollo de software en nuestro país y llegar a innovar y exportar conocimiento fuera de él.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Nuevas alianzas, de las cuales publicaremos detalles pronto&lt;/strong&gt;, nos permiten tener una estratégica &lt;strong&gt;oficina en pleno centro de negocios de Madrid&lt;/strong&gt;. Nos permiten llegar a clientes que antes eran imposibles.&lt;/p&gt;
&lt;p&gt;
La consolidación de &lt;strong&gt;Codesai&lt;/strong&gt; como empresa, junto con su red de partners, van a multiplicar nuestra impacto, nuestra capacidad de cambiar el mundo en que vivimos.&lt;/p&gt;
&lt;p&gt;
Arrancamos nueva etapa, Codesai se va a hacer notar. Estad atentos que pronto habrá fiesta de inauguración!&lt;/p&gt;
&lt;p&gt;
Ya sabes que &lt;strong&gt;puedes contar con nosotros&lt;/strong&gt;, no sólo en Madrid sino en cualquier lugar... sólo dinos &lt;strong&gt;¿en qué podemos ayudarte?&lt;/strong&gt;&lt;/p&gt;
</description>
          <pubDate>2016-05-20T15:48:12+00:00</pubDate>
          <link>https://codesai.aerobatic.io/2016/05/lanzamos-codesai-con-ilusion</link>
          <guid isPermaLink="true">https://codesai.aerobatic.io/2016/05/lanzamos-codesai-con-ilusion</guid>
        </item>
      
    
  </channel>
</rss>